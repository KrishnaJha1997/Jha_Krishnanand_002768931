/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Image;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.EmployeeInfo;
import model.EmployeeInfoHistory;  

/**
 *
 * @author krishna
 */
public class ViewJPanel extends javax.swing.JPanel {
    DefaultTableModel dm;
    Image empImg;


    /**
     * Creates new form viewJPanel
     */
    
    //EmployeeInfo employee;
    EmployeeInfoHistory history;
            
    public ViewJPanel(EmployeeInfoHistory history) {
        initComponents();
             btnUpdateSave.setVisible(false);
             jButton1.setVisible(false);
        
        //this.employee = employee;
        this.history = history;
        
        populateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblEmailAddress = new javax.swing.JLabel();
        lblPhoto = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtEmployeeId = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtGender = new javax.swing.JTextField();
        txtStartDate = new javax.swing.JTextField();
        txtLevel = new javax.swing.JTextField();
        txtTeamInfo = new javax.swing.JTextField();
        txtPositionTitle = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        txtCellPhoneNumber = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtEmailAddress = new javax.swing.JTextField();
        lblEmployeeId = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblStartDate = new javax.swing.JLabel();
        lblLevel = new javax.swing.JLabel();
        lblTeamInfo = new javax.swing.JLabel();
        lblPositionTitle = new javax.swing.JLabel();
        lblContactInfo = new javax.swing.JLabel();
        lblCellPhoneNumber = new javax.swing.JLabel();
        btnUpdateDetails = new javax.swing.JButton();
        btnDeleteDetails = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        btnViewDetails = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnUpdateSave = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));

        lblEmailAddress.setText("Email Address:");

        lblPhoto.setText("Photo");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtEmployeeId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmployeeIdActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Employee Details");

        lblName.setText("Name:");

        lblEmployeeId.setText("Employee ID:");

        lblAge.setText("Age:");

        lblImage.setBackground(new java.awt.Color(255, 255, 255));
        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblGender.setText("Gender:");

        lblStartDate.setText("Start Date:");

        lblLevel.setText("Level:");

        lblTeamInfo.setText("Team Info:");

        lblPositionTitle.setText("Position Title:");

        lblContactInfo.setText("Contact Info:");

        lblCellPhoneNumber.setText("Cell Phone Number:");

        btnUpdateDetails.setText("Update Employee Details");
        btnUpdateDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateDetailsActionPerformed(evt);
            }
        });

        btnDeleteDetails.setText("Delete Employee Details");
        btnDeleteDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDetailsActionPerformed(evt);
            }
        });

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Position Title", "Phone Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmployee);

        btnViewDetails.setText("View Employee Details");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/krishna/Downloads/icons8-search-24.png")); // NOI18N
        jLabel1.setSize(new java.awt.Dimension(20, 17));

        btnUpdateSave.setText("Save");
        btnUpdateSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateSaveActionPerformed(evt);
            }
        });

        jButton1.setText("Attach Image");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(112, 112, 112))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(117, 117, 117)
                                .addComponent(lblEmailAddress)
                                .addGap(33, 33, 33)
                                .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblCellPhoneNumber)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCellPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblTeamInfo)
                                    .addComponent(lblLevel)
                                    .addComponent(lblStartDate)
                                    .addComponent(lblGender)
                                    .addComponent(lblAge)
                                    .addComponent(lblEmployeeId)
                                    .addComponent(lblName)
                                    .addComponent(lblPositionTitle)
                                    .addComponent(lblContactInfo))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(160, 160, 160)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(225, 225, 225))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jButton1)
                                                    .addGap(18, 18, 18)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtEmployeeId, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(lblPhoto)
                                                        .addGap(57, 57, 57))))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(161, 161, 161)
                                        .addComponent(txtTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(173, 173, 173)
                                        .addComponent(btnUpdateDetails)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnDeleteDetails))))
                            .addComponent(btnViewDetails)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(btnUpdateSave, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lblTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewDetails)
                    .addComponent(btnDeleteDetails)
                    .addComponent(btnUpdateDetails))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmployeeId)
                            .addComponent(txtEmployeeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender)
                            .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStartDate)
                            .addComponent(txtStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLevel)
                            .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTeamInfo)
                            .addComponent(txtTeamInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPositionTitle)
                            .addComponent(txtPositionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCellPhoneNumber)
                            .addComponent(txtCellPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblContactInfo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmailAddress)
                            .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdateSave)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblPhoto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtEmployeeIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmployeeIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmployeeIdActionPerformed

    private void btnDeleteDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDetailsActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblEmployee.getSelectedRow();
        
        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select the row to be deleted");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        EmployeeInfo selectedEmployees = (EmployeeInfo) model.getValueAt(selectedRowIndex,0);
        
        history.deleteEmployee(selectedEmployees);
        
        populateTable();
        
        txtName.setText("");
        txtEmployeeId.setText("");
        txtAge.setText("");
        txtGender.setText("");
        txtStartDate.setText("");
        txtLevel.setText("");      
        txtTeamInfo.setText("");
        txtPositionTitle.setText("");
        txtCellPhoneNumber.setText("");
        txtEmailAddress.setText("");
        lblImage.setIcon(null);  
        
        try {
            Thread.sleep(500);
            JOptionPane.showMessageDialog(this, "Employee Details deleted successfully");
        } catch (InterruptedException ex) {
            Logger.getLogger(ViewJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
                
    }//GEN-LAST:event_btnDeleteDetailsActionPerformed

    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblEmployee.getSelectedRow();
        
        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select the row to be Viewed");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        EmployeeInfo selectedEmployees = (EmployeeInfo) model.getValueAt(selectedRowIndex,0);
        
        
        txtName.setText(selectedEmployees.getName());
        txtEmployeeId.setText(String.valueOf(selectedEmployees.getEmployeeId()));
        txtAge.setText(String.valueOf(selectedEmployees.getAge()));
        txtGender.setText(selectedEmployees.getGender());
        txtStartDate.setText(selectedEmployees.getStartDate());
        txtLevel.setText(selectedEmployees.getLevel());
        txtTeamInfo.setText(selectedEmployees.getTeamInfo());
        txtPositionTitle.setText(selectedEmployees.getPositionTitle());
        txtCellPhoneNumber.setText(String.valueOf(selectedEmployees.getCellPhoneNumber()));
        txtEmailAddress.setText(selectedEmployees.getEmailAddress());
        lblImage.setIcon(selectedEmployees.getPhoto());
        
        txtName.setEditable(false);
        txtEmployeeId.setEditable(false);
        txtAge.setEditable(false);
        txtGender.setEditable(false);
        txtStartDate.setEditable(false);
        txtLevel.setEditable(false);
        txtTeamInfo.setEditable(false);
        txtPositionTitle.setEditable(false);
        txtCellPhoneNumber.setEditable(false);
        txtEmailAddress.setEditable(false);
       
           
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        // TODO add your handling code here:
        
//        int selectedRowIndex = tblEmployee.getSelectedRow();
//        
//        if (selectedRowIndex<0) {
//            JOptionPane.showMessageDialog(this, "Please select the row to be Viewed");
//            return;
//        }
//        
//        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
//        EmployeeInfo selectedEmployees = (EmployeeInfo) model.getValueAt(selectedRowIndex,0);
//        
//        
//        txtName.setText(selectedEmployees.getName());
//        txtEmployeeId.setText(String.valueOf(selectedEmployees.getEmployeeId()));
//        txtAge.setText(String.valueOf(selectedEmployees.getAge()));
//        txtGender.setText(selectedEmployees.getGender());
//        txtStartDate.setText(selectedEmployees.getStartDate());
//        txtLevel.setText(selectedEmployees.getLevel());
//        txtTeamInfo.setText(selectedEmployees.getTeamInfo());
//        txtPositionTitle.setText(selectedEmployees.getPositionTitle());
//        txtCellPhoneNumber.setText(String.valueOf(selectedEmployees.getCellPhoneNumber()));
//        txtEmailAddress.setText(selectedEmployees.getEmailAddress());
//        lblImage.setIcon(selectedEmployees.getPhoto());
        
//        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
//        
//        String tblName = model.getValueAt(tblEmployee.getSelectedRow(), 0).toString();
//        String tblEmployeeId = model.getValueAt(tblEmployee.getSelectedRow(), 1).toString();
//        String tblAge = model.getValueAt(tblEmployee.getSelectedRow(), 2).toString();
//        
//        txtName.setText(tblName);
//        txtEmployeeId.setText(tblEmployeeId);
//        txtAge.setText(tblAge);
        
        
    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void btnUpdateDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateDetailsActionPerformed
        // TODO add your handling code here:
                btnUpdateSave.setVisible(true);
             jButton1.setVisible(true);
        
        int selectedRowIndex = tblEmployee.getSelectedRow();
        
        if (selectedRowIndex<0) {
            JOptionPane.showMessageDialog(this, "Please select the row to be Updated");
            return;
        }
        
         DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
//         EmployeeInfo selectedEmp = (EmployeeInfo) model.getValueAt(selectedRowIndex,0);
         
         
        EmployeeInfo selectedEmployees = (EmployeeInfo) model.getValueAt(selectedRowIndex,0);
        
        
        txtName.setText(selectedEmployees.getName());
        txtEmployeeId.setText(String.valueOf(selectedEmployees.getEmployeeId()));
        txtAge.setText(String.valueOf(selectedEmployees.getAge()));
        txtGender.setText(selectedEmployees.getGender());
        txtStartDate.setText(selectedEmployees.getStartDate());
        txtLevel.setText(selectedEmployees.getLevel());
        txtTeamInfo.setText(selectedEmployees.getTeamInfo());
        txtPositionTitle.setText(selectedEmployees.getPositionTitle());
        txtCellPhoneNumber.setText(String.valueOf(selectedEmployees.getCellPhoneNumber()));
        txtEmailAddress.setText(selectedEmployees.getEmailAddress());
        lblImage.setIcon(selectedEmployees.getPhoto());
          
        
//          String name = txtName.getText();
//          int employeeId = Integer.parseInt(txtEmployeeId.getText());
//          int age = Integer.parseInt(txtAge.getText());
//          String gender = txtGender.getText();
//          String startDate = txtStartDate.getText();
//          String level = txtLevel.getText();
//          String teamInfo = txtTeamInfo.getText();
//          String positionTitle = txtPositionTitle.getText();
//          int cellPhoneNumber = Integer.parseInt(txtCellPhoneNumber.getText());
//          String emailAddress = txtEmailAddress.getText();
          //String photo = lblImage.getText();
          
         // EmployeeInfo ei = history.addNewEmployee(); 
          
//           selectedEmp.setName(name);
//           selectedEmp.setEmployeeId(employeeId);
//           selectedEmp.setAge(age);
//           selectedEmp.setGender(gender);
//           selectedEmp.setStartDate(startDate);
//           selectedEmp.setLevel(level);
//           selectedEmp.setTeamInfo(teamInfo);
//           selectedEmp.setPositionTitle(positionTitle);
//           selectedEmp.setCellPhoneNumber(cellPhoneNumber);
//           selectedEmp.setEmailAddress(emailAddress);
//          //ei.setPhoto(new ImageIcon(empImg));
//          
//          JOptionPane.showMessageDialog(this, "Employee Updated Successfully.");
//                
//        
//        txtName.setText("");
//        txtEmployeeId.setText("");
//        txtAge.setText("");
//        txtGender.setText("");
//        txtStartDate.setText("");
//        txtLevel.setText("");      
//        txtTeamInfo.setText("");
//        txtPositionTitle.setText("");
//        txtCellPhoneNumber.setText("");
//        txtEmailAddress.setText("");
//        lblImage.setIcon(null); 
        
        
//        int selectedRowIndex = tblEmployee.getSelectedRow();
//        
//        if (selectedRowIndex<0) {
//            JOptionPane.showMessageDialog(this, "Please select the row to be Viewed");
//            return;
//        }
//        
//        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
//        EmployeeInfo selectedEmployees = (EmployeeInfo) model.getValueAt(selectedRowIndex,0);
//        
//        
//        txtName.setText(selectedEmployees.getName());
//        txtEmployeeId.setText(String.valueOf(selectedEmployees.getEmployeeId()));
//        txtAge.setText(String.valueOf(selectedEmployees.getAge()));
//        txtGender.setText(selectedEmployees.getGender());
//        txtStartDate.setText(selectedEmployees.getStartDate());
//        txtLevel.setText(selectedEmployees.getLevel());
//        txtTeamInfo.setText(selectedEmployees.getTeamInfo());
//        txtPositionTitle.setText(selectedEmployees.getPositionTitle());
//        txtCellPhoneNumber.setText(String.valueOf(selectedEmployees.getCellPhoneNumber()));
//        txtEmailAddress.setText(selectedEmployees.getEmailAddress());
//        lblImage.setIcon(selectedEmployees.getPhoto());
        
//        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
//        if(tblEmployee.getSelectedRowCount()==1){
//            String name = txtName.getText();
//            String employeeId = txtEmployeeId.getText();
//            String age= txtAge.getText();
//            
//            
//            model.setValueAt(name, tblEmployee.getSelectedRow(), 0);
//            model.setValueAt(employeeId, tblEmployee.getSelectedRow(), 1);
//            model.setValueAt(age, tblEmployee.getSelectedRow(), 2);
//            
//            
//            JOptionPane.showMessageDialog(this, "Employee Details Updated Successfully");
//
//            
//        }else{
//            if(tblEmployee.getRowCount()==0){
//            JOptionPane.showMessageDialog(this, "Table is Empty");   
//            }else{
//            JOptionPane.showMessageDialog(this, "Please select only single row for update ");    
//            }
//        }

            
          


        
        
    }//GEN-LAST:event_btnUpdateDetailsActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String query= txtSearch.getText();
        filter(query);
        
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void btnUpdateSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateSaveActionPerformed
        // TODO add your handling code here:
        

        int selectedRowIndex = tblEmployee.getSelectedRow();
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        EmployeeInfo selectedEmp = (EmployeeInfo) model.getValueAt(selectedRowIndex,0);
         
        
          String name = txtName.getText();
          int employeeId = Integer.parseInt(txtEmployeeId.getText());
          int age = Integer.parseInt(txtAge.getText());
          String gender = txtGender.getText();
          String startDate = txtStartDate.getText();
          String level = txtLevel.getText();
          String teamInfo = txtTeamInfo.getText();
          String positionTitle = txtPositionTitle.getText();
          int cellPhoneNumber = Integer.parseInt(txtCellPhoneNumber.getText());
          String emailAddress = txtEmailAddress.getText();
          String photo = lblImage.getText();
          
         // EmployeeInfo ei = history.addNewEmployee(); 
          
           selectedEmp.setName(name);
           selectedEmp.setEmployeeId(employeeId);
           selectedEmp.setAge(age);
           selectedEmp.setGender(gender);
           selectedEmp.setStartDate(startDate);
           selectedEmp.setLevel(level);
           selectedEmp.setTeamInfo(teamInfo);
           selectedEmp.setPositionTitle(positionTitle);
           selectedEmp.setCellPhoneNumber(cellPhoneNumber);
           selectedEmp.setEmailAddress(emailAddress);
           selectedEmp.setPhoto(new ImageIcon(empImg));
          
          JOptionPane.showMessageDialog(this, "Employee Updated Successfully.");
          
            populateTable();
        
        
    }//GEN-LAST:event_btnUpdateSaveActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                JFileChooser browseImageFile = new JFileChooser();
    
        FileNameExtensionFilter filter = new FileNameExtensionFilter("IMAGES", "png", "jpg","jpeg");
        browseImageFile.addChoosableFileFilter(filter);
        int showOpenDialogue = browseImageFile.showOpenDialog(null);

        if (showOpenDialogue ==JFileChooser.APPROVE_OPTION){
            File selectedImageFile = browseImageFile.getSelectedFile();
            String selectedImagePath = selectedImageFile.getAbsolutePath();
            ImageIcon Img = new ImageIcon(selectedImagePath);
            empImg = Img.getImage().getScaledInstance(lblImage.getWidth(), lblImage.getHeight(), Image.SCALE_SMOOTH);
            lblImage.setIcon(new ImageIcon(empImg));
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteDetails;
    private javax.swing.JButton btnUpdateDetails;
    private javax.swing.JButton btnUpdateSave;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCellPhoneNumber;
    private javax.swing.JLabel lblContactInfo;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblEmployeeId;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblPositionTitle;
    private javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblTeamInfo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCellPhoneNumber;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtEmployeeId;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPositionTitle;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStartDate;
    private javax.swing.JTextField txtTeamInfo;
    // End of variables declaration//GEN-END:variables

 //   private void displayEmployee() {
//        
//        txtName.setText(employee.getName());
//        txtEmployeeId.setText(employee.getEmployeeId());
//        txtAge.setText(employee.getAge());
//        txtGender.setText(employee.getGender());
//        txtStartDate.setText(employee.getStartDate());
//        txtLevel.setText(employee.getLevel());
//        txtTeamInfo.setText(employee.getTeamInfo());
//        txtPositionTitle.setText(employee.getPositionTitle());
//        txtCellPhoneNumber.setText(employee.getCellPhoneNumber());
//        txtEmailAddress.setText(employee.getEmailAddress());
//        lblImage.setText(employee.getPhoto());
//        
        
    //}

    private void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
        model.setRowCount(0);
        
        for (EmployeeInfo ei : history.getHistory()){
            
            Object[] row = new Object[4];
            row[0] = ei;
            row[1] = ei.getEmployeeId();
            row[2] = ei.getPositionTitle();
            row[3] = ei.getCellPhoneNumber();
            
            model.addRow(row);
        }
    }
    
    private void filter(String query){
        
        dm= (DefaultTableModel) tblEmployee.getModel();
        TableRowSorter<DefaultTableModel> tr= new TableRowSorter<DefaultTableModel>(dm);
        tblEmployee.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(query));
           
    }
}

