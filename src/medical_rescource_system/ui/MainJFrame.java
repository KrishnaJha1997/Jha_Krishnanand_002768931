/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package medical_rescource_system.ui;



import java.awt.List;
//import static java.lang.foreign.MemorySession.global;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;

import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

import medical_rescource_system.Doctor;
import medical_rescource_system.Doctor_Directory;
import medical_rescource_system.EncounterHistory;
import medical_rescource_system.Hospital;
import medical_rescource_system.Hospital_List;
import medical_rescource_system.Patient_Details;
import medical_rescource_system.Patient_Directory;
import medical_rescource_system.Person;
import medical_rescource_system.PersonDirectory;
import medical_rescource_system.VitalSigns;




/**
 *
 * @author Krishna
 */
public class MainJFrame extends javax.swing.JFrame {
    
    Patient_Directory pat_history;
    PersonDirectory personList;
    Hospital_List HospitalList;
    Doctor_Directory DoctorList;
    EncounterHistory EncList;
    int glb_pat_id;
    
//    City_List cityList;
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
//        history=new Credentials_list();
        pat_history = new Patient_Directory();
        personList =new PersonDirectory();
        HospitalList =new Hospital_List();
        DoctorList = new Doctor_Directory();
        EncList=new EncounterHistory();
        
//        doc_history = new doc_history();
//        cityList =new City_List();
        
//        this.pat_history=pat_history;
        Encounter_Panel_new.setVisible(false);
        Option_Panel_Doctor.setVisible(false);
        Option_Panel_Admin_new.setVisible(false);
        Workarea.setVisible(true);
        SplitPane.setRightComponent(Workarea);
        LoginPanel.setVisible(false);
        tblEncPat.setVisible(false);
        Doc_save_btn.setVisible(false);

        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SplitPane = new javax.swing.JSplitPane();
        ControlPanel = new javax.swing.JPanel();
        Login = new javax.swing.JButton();
        Workarea = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        LoginPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        BtnMainLogin = new javax.swing.JButton();
        btnMainSave = new javax.swing.JButton();
        cBoxRole = new javax.swing.JComboBox<>();
        txtUserNameMain = new javax.swing.JTextField();
        pswdPasswordMain = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        Option_Panel_Doctor = new javax.swing.JPanel();
        btnDoc_Panel_Encounter = new javax.swing.JButton();
        btnPatHistory = new javax.swing.JButton();
        btnEnctrHist = new javax.swing.JButton();
        btnPatDir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEncPat = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblpat_hist_doc = new javax.swing.JTable();
        Encounter_Panel_new = new javax.swing.JPanel();
        BP_tf = new java.awt.TextField();
        jLabel56 = new javax.swing.JLabel();
        Patient_Age_tf = new java.awt.TextField();
        jLabel57 = new javax.swing.JLabel();
        heartRate = new java.awt.TextField();
        jLabel58 = new javax.swing.JLabel();
        Temp_tf = new java.awt.TextField();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        doc_id_tf = new java.awt.TextField();
        Patient_Name_tf = new java.awt.TextField();
        Save_Enc_btn = new javax.swing.JButton();
        jLabel65 = new javax.swing.JLabel();
        doc_name_tf1 = new java.awt.TextField();
        jLabel66 = new javax.swing.JLabel();
        pat_id_tf = new java.awt.TextField();
        StartDate = new com.toedter.calendar.JDateChooser();
        jLabel64 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        Doc_Dir_Table2 = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        tblpatienthistory_dp1 = new javax.swing.JTable();
        btnbackencounter = new javax.swing.JButton();
        btnViewDoc = new javax.swing.JButton();
        btnViewPat = new javax.swing.JButton();
        Option_Panel_Admin_new = new javax.swing.JPanel();
        btnCityCommAdd = new javax.swing.JButton();
        btn_Hosp_op = new javax.swing.JButton();
        btnVUD = new javax.swing.JButton();
        btnAddPerson = new javax.swing.JButton();
        btnEnctrOpt = new javax.swing.JButton();
        btnDocDir = new javax.swing.JButton();
        pat_directory_btn12 = new javax.swing.JButton();
        CreatePerson_new = new javax.swing.JPanel();
        txtPersonName = new java.awt.TextField();
        emailid_tf = new java.awt.TextField();
        lblUSername = new javax.swing.JLabel();
        lblAddPErson = new javax.swing.JLabel();
        lblPersonID = new javax.swing.JLabel();
        txtPersonId = new java.awt.TextField();
        lblRole = new javax.swing.JLabel();
        Per_Save_Btn = new javax.swing.JButton();
        lblGender = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        GenderComboBox = new javax.swing.JComboBox<>();
        cBoxRoleCombo = new javax.swing.JComboBox<>();
        lblCity = new javax.swing.JLabel();
        lblComm = new javax.swing.JLabel();
        lblHouse = new javax.swing.JLabel();
        CityComboBox = new javax.swing.JComboBox<>();
        CommunityComboBox2 = new javax.swing.JComboBox<>();
        HouseComboBox = new javax.swing.JComboBox<>();
        pswdPasswordPerson = new javax.swing.JPasswordField();
        Back_Btn1 = new javax.swing.JButton();
        lblSpeciality = new javax.swing.JLabel();
        txtSpeciality = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        age_tf = new javax.swing.JTextField();
        CityCommHouse_new = new javax.swing.JPanel();
        lblCommCity = new javax.swing.JLabel();
        lblCityComm = new javax.swing.JLabel();
        lblHouseCity = new javax.swing.JLabel();
        btnCommSave = new javax.swing.JButton();
        Community_tf = new javax.swing.JTextField();
        lblHouseComm = new javax.swing.JTextField();
        City_tf = new javax.swing.JTextField();
        btnbackComm = new javax.swing.JButton();
        Per_RUD_Panel_new = new javax.swing.JPanel();
        lblPassCRUD = new javax.swing.JLabel();
        per_username_tf1 = new java.awt.TextField();
        emailid_tf1 = new java.awt.TextField();
        lblUSernameCRUD = new javax.swing.JLabel();
        lblCityCRUd = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        lblCommCRUD = new javax.swing.JLabel();
        lblPersonCRUD = new javax.swing.JLabel();
        lblHouseCRUD = new javax.swing.JLabel();
        per_id_tf1 = new java.awt.TextField();
        lblRoleCRUD = new javax.swing.JLabel();
        Per_Update_Save_Btn = new javax.swing.JButton();
        lblGenderCRUD = new javax.swing.JLabel();
        perPass_tf1 = new javax.swing.JPasswordField();
        lblemailId = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        PersonTbl = new javax.swing.JTable();
        Per_View = new javax.swing.JButton();
        Per_Update = new javax.swing.JButton();
        Per_Delete = new javax.swing.JButton();
        role_tf = new java.awt.TextField();
        gender_tf = new java.awt.TextField();
        city_tf = new java.awt.TextField();
        comm_tf = new java.awt.TextField();
        house_tf = new java.awt.TextField();
        Back_Btn = new javax.swing.JButton();
        Hospital_CRUD_new = new javax.swing.JPanel();
        HospNametf = new javax.swing.JTextField();
        CityCBox_Hosp = new javax.swing.JComboBox<>();
        CommCbox_Hosp = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        SaveHospbtn = new javax.swing.JButton();
        label1 = new java.awt.Label();
        jScrollPane5 = new javax.swing.JScrollPane();
        HospTbl = new javax.swing.JTable();
        Update_hosp_btn = new javax.swing.JButton();
        Del_Hosp_btn = new javax.swing.JButton();
        SaveUpdHospbtn1 = new javax.swing.JButton();
        btnback_button_hospitalcrud = new javax.swing.JButton();
        Doctor_Directory_Panel_new = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Doc_Dir_Table = new javax.swing.JTable();
        Doc_View_btn = new javax.swing.JButton();
        Doc_update_btn = new javax.swing.JButton();
        Doc_Delete_btn = new javax.swing.JButton();
        doc_id_lbl = new javax.swing.JLabel();
        user_lbl = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        city_lbl = new javax.swing.JLabel();
        comm_lbl = new javax.swing.JLabel();
        spec_lbl = new javax.swing.JLabel();
        Doc_Id_txt = new javax.swing.JTextField();
        usr_txt = new javax.swing.JTextField();
        city_txt = new javax.swing.JTextField();
        comm_txt = new javax.swing.JTextField();
        spec_txt = new javax.swing.JTextField();
        Doc_save_btn = new javax.swing.JButton();
        Option_Panel_Patient_new = new javax.swing.JPanel();
        btn_Self_Details = new javax.swing.JButton();
        btn_Hospital_Search = new javax.swing.JButton();
        Self_Details_Pat_new = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblPat_self = new javax.swing.JTable();
        lblSelfEncDetails = new javax.swing.JLabel();
        btnBackDetails = new javax.swing.JButton();
        PatView_Hosp_Panel_new = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        HospTbl1 = new javax.swing.JTable();
        lblSearch = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        Doc_Dir_Table1 = new javax.swing.JTable();
        lblHospList = new javax.swing.JLabel();
        lblDocList = new javax.swing.JLabel();
        btnBackHospPanel = new javax.swing.JButton();
        RUD_Enc_panel_new = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tblEnc1 = new javax.swing.JTable();
        jLabel61 = new javax.swing.JLabel();
        Patient_Name_tf1 = new java.awt.TextField();
        Patient_Age_tf1 = new java.awt.TextField();
        Save_Enc_btn1 = new javax.swing.JButton();
        lblDocIdEnc = new javax.swing.JLabel();
        heartRate1 = new java.awt.TextField();
        lblPatNameEnc = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        Temp_tf1 = new java.awt.TextField();
        doc_name_tf2 = new java.awt.TextField();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        btnbackencounter1 = new javax.swing.JButton();
        txtPatIdEnc = new java.awt.TextField();
        jLabel96 = new javax.swing.JLabel();
        calStartDateEnc = new com.toedter.calendar.JDateChooser();
        jLabel98 = new javax.swing.JLabel();
        txtBPEnc = new java.awt.TextField();
        txtDocIdEnc = new java.awt.TextField();
        btnViewEnc = new javax.swing.JButton();
        btnUpdateEnc = new javax.swing.JButton();
        btnDeleteEnc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        ControlPanel.setBackground(new java.awt.Color(0, 0, 255));

        Login.setText("Home");
        Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ControlPanelLayout = new javax.swing.GroupLayout(ControlPanel);
        ControlPanel.setLayout(ControlPanelLayout);
        ControlPanelLayout.setHorizontalGroup(
            ControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Login)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ControlPanelLayout.setVerticalGroup(
            ControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlPanelLayout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(Login)
                .addContainerGap(530, Short.MAX_VALUE))
        );

        SplitPane.setLeftComponent(ControlPanel);

        Workarea.setBackground(new java.awt.Color(153, 204, 255));
        Workarea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Workarea.setMaximumSize(new java.awt.Dimension(600, 600));
        Workarea.setMinimumSize(new java.awt.Dimension(600, 600));
        Workarea.setName(""); // NOI18N
        Workarea.setPreferredSize(new java.awt.Dimension(600, 600));

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 1, 30)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Hospital Management System");

        javax.swing.GroupLayout WorkareaLayout = new javax.swing.GroupLayout(Workarea);
        Workarea.setLayout(WorkareaLayout);
        WorkareaLayout.setHorizontalGroup(
            WorkareaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WorkareaLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );
        WorkareaLayout.setVerticalGroup(
            WorkareaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WorkareaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(540, 540, 540))
        );

        SplitPane.setRightComponent(Workarea);

        LoginPanel.setBackground(new java.awt.Color(153, 204, 255));
        LoginPanel.setLayout(null);

        jLabel1.setBackground(new java.awt.Color(204, 204, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LOGIN");
        LoginPanel.add(jLabel1);
        jLabel1.setBounds(0, 93, 1022, 46);

        BtnMainLogin.setText("Login");
        BtnMainLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMainLoginActionPerformed(evt);
            }
        });
        LoginPanel.add(BtnMainLogin);
        BtnMainLogin.setBounds(422, 271, 72, 23);

        btnMainSave.setText("Save");
        btnMainSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainSaveActionPerformed(evt);
            }
        });
        LoginPanel.add(btnMainSave);
        btnMainSave.setBounds(534, 271, 72, 23);

        cBoxRole.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cBoxRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor", "Patient", "System Admin", "Community Admin", "Hospital Admin" }));
        cBoxRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBoxRoleActionPerformed(evt);
            }
        });
        LoginPanel.add(cBoxRole);
        cBoxRole.setBounds(397, 231, 240, 28);

        txtUserNameMain.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtUserNameMain.setText("Admin");
        txtUserNameMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNameMainActionPerformed(evt);
            }
        });
        LoginPanel.add(txtUserNameMain);
        txtUserNameMain.setBounds(397, 157, 240, 28);

        pswdPasswordMain.setText("commAdmin");
        LoginPanel.add(pswdPasswordMain);
        pswdPasswordMain.setBounds(397, 197, 240, 28);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hosp.png"))); // NOI18N
        LoginPanel.add(jLabel5);
        jLabel5.setBounds(0, -20, 1030, 680);

        SplitPane.setRightComponent(LoginPanel);

        getContentPane().add(SplitPane, "card2");

        Option_Panel_Doctor.setBackground(new java.awt.Color(153, 204, 255));

        btnDoc_Panel_Encounter.setText("Encounter");
        btnDoc_Panel_Encounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoc_Panel_EncounterActionPerformed(evt);
            }
        });

        btnPatHistory.setText("Patient History");
        btnPatHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatHistoryActionPerformed(evt);
            }
        });

        btnEnctrHist.setText("Encounter History");
        btnEnctrHist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnctrHistActionPerformed(evt);
            }
        });

        btnPatDir.setText("Patient Directory");
        btnPatDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatDirActionPerformed(evt);
            }
        });

        tblEncPat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Patient Id", "Patient Name", "Doc Id", "Doc Name", "Time"
            }
        ));
        jScrollPane2.setViewportView(tblEncPat);

        tblpat_hist_doc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Id", "Patient Username", "Patient City", "Patient Age"
            }
        ));
        jScrollPane9.setViewportView(tblpat_hist_doc);

        javax.swing.GroupLayout Option_Panel_DoctorLayout = new javax.swing.GroupLayout(Option_Panel_Doctor);
        Option_Panel_Doctor.setLayout(Option_Panel_DoctorLayout);
        Option_Panel_DoctorLayout.setHorizontalGroup(
            Option_Panel_DoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Option_Panel_DoctorLayout.createSequentialGroup()
                .addGap(392, 392, 392)
                .addGroup(Option_Panel_DoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEnctrHist, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDoc_Panel_Encounter, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73)
                .addGroup(Option_Panel_DoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPatDir, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPatHistory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(371, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Option_Panel_DoctorLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(Option_Panel_DoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)
                    .addComponent(jScrollPane9))
                .addGap(93, 93, 93))
        );

        Option_Panel_DoctorLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDoc_Panel_Encounter, btnEnctrHist, btnPatDir, btnPatHistory});

        Option_Panel_DoctorLayout.setVerticalGroup(
            Option_Panel_DoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Option_Panel_DoctorLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(Option_Panel_DoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDoc_Panel_Encounter, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPatDir, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(Option_Panel_DoctorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPatHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEnctrHist, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        Option_Panel_DoctorLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDoc_Panel_Encounter, btnEnctrHist, btnPatDir, btnPatHistory});

        getContentPane().add(Option_Panel_Doctor, "card4");

        Encounter_Panel_new.setBackground(new java.awt.Color(153, 204, 255));
        Encounter_Panel_new.setMaximumSize(new java.awt.Dimension(600, 600));
        Encounter_Panel_new.setMinimumSize(new java.awt.Dimension(600, 600));
        Encounter_Panel_new.setPreferredSize(new java.awt.Dimension(600, 600));

        BP_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BP_tfActionPerformed(evt);
            }
        });

        jLabel56.setText("Temp");

        jLabel57.setText("Doctor Id:");

        heartRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartRateActionPerformed(evt);
            }
        });

        jLabel58.setText("Patient Name:");

        Temp_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Temp_tfActionPerformed(evt);
            }
        });

        jLabel59.setText("Patient Age:");

        jLabel60.setText("BP:");

        jLabel62.setText("HeartRate");

        jLabel63.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel63.setText("Doctor's Clinic");

        Save_Enc_btn.setText("SAVE");
        Save_Enc_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_Enc_btnActionPerformed(evt);
            }
        });

        jLabel65.setText("Patient Id:");

        jLabel66.setText("Doctor Name :");

        jLabel64.setText("Date");

        Doc_Dir_Table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doc_ID", "Doc_Name", "Doc_City", "Doc_Community"
            }
        ));
        jScrollPane10.setViewportView(Doc_Dir_Table2);

        tblpatienthistory_dp1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Id", "Patient Name", "Patient City", "Patient Age"
            }
        ));
        jScrollPane11.setViewportView(tblpatienthistory_dp1);

        btnbackencounter.setText("BACK");
        btnbackencounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackencounterActionPerformed(evt);
            }
        });

        btnViewDoc.setText("View Doctor");
        btnViewDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDocActionPerformed(evt);
            }
        });

        btnViewPat.setText("View Patient");
        btnViewPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Encounter_Panel_newLayout = new javax.swing.GroupLayout(Encounter_Panel_new);
        Encounter_Panel_new.setLayout(Encounter_Panel_newLayout);
        Encounter_Panel_newLayout.setHorizontalGroup(
            Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                                .addComponent(jLabel65)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pat_id_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                                .addComponent(jLabel57)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(doc_id_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(doc_name_tf1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel63)
                            .addComponent(jLabel66)
                            .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                                .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel59)
                                    .addComponent(jLabel58)
                                    .addComponent(jLabel60)
                                    .addComponent(jLabel56)
                                    .addComponent(jLabel62))
                                .addGap(67, 67, 67)
                                .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BP_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Patient_Age_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(heartRate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Temp_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Patient_Name_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Encounter_Panel_newLayout.createSequentialGroup()
                                .addComponent(jLabel64)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(StartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(Save_Enc_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnbackencounter)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnViewDoc)
                        .addGap(35, 35, 35)
                        .addComponent(btnViewPat)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                        .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        Encounter_Panel_newLayout.setVerticalGroup(
            Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel63)
                .addGap(18, 18, 18)
                .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                        .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doc_id_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(doc_name_tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pat_id_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Patient_Name_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Patient_Age_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                                .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BP_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Temp_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(heartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(StartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Save_Enc_btn)
                                    .addComponent(btnbackencounter)))
                            .addGroup(Encounter_Panel_newLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Encounter_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewDoc)
                    .addComponent(btnViewPat))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        getContentPane().add(Encounter_Panel_new, "card3");

        Option_Panel_Admin_new.setBackground(new java.awt.Color(153, 204, 255));

        btnCityCommAdd.setText("Add City Community House");
        btnCityCommAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCityCommAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCityCommAddActionPerformed(evt);
            }
        });

        btn_Hosp_op.setText("Hospital Directory");
        btn_Hosp_op.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Hosp_opActionPerformed(evt);
            }
        });

        btnVUD.setText("  View, Update, Delete Person");
        btnVUD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVUDActionPerformed(evt);
            }
        });

        btnAddPerson.setText("Add Person");
        btnAddPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPersonActionPerformed(evt);
            }
        });

        btnEnctrOpt.setText("Encounter Operations");
        btnEnctrOpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnctrOptActionPerformed(evt);
            }
        });

        btnDocDir.setText("Doctor Directory");
        btnDocDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocDirActionPerformed(evt);
            }
        });

        pat_directory_btn12.setText("Patient Operations");
        pat_directory_btn12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pat_directory_btn12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Option_Panel_Admin_newLayout = new javax.swing.GroupLayout(Option_Panel_Admin_new);
        Option_Panel_Admin_new.setLayout(Option_Panel_Admin_newLayout);
        Option_Panel_Admin_newLayout.setHorizontalGroup(
            Option_Panel_Admin_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Option_Panel_Admin_newLayout.createSequentialGroup()
                .addGroup(Option_Panel_Admin_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Option_Panel_Admin_newLayout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addGroup(Option_Panel_Admin_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_Hosp_op, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEnctrOpt, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Option_Panel_Admin_newLayout.createSequentialGroup()
                        .addGap(399, 399, 399)
                        .addComponent(pat_directory_btn12, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(Option_Panel_Admin_newLayout.createSequentialGroup()
                .addGroup(Option_Panel_Admin_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Option_Panel_Admin_newLayout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(btnAddPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnVUD, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Option_Panel_Admin_newLayout.createSequentialGroup()
                        .addGap(391, 391, 391)
                        .addComponent(btnDocDir, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Option_Panel_Admin_newLayout.createSequentialGroup()
                        .addGap(351, 351, 351)
                        .addComponent(btnCityCommAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(434, Short.MAX_VALUE))
        );
        Option_Panel_Admin_newLayout.setVerticalGroup(
            Option_Panel_Admin_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Option_Panel_Admin_newLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(Option_Panel_Admin_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVUD, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btn_Hosp_op, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDocDir, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEnctrOpt, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pat_directory_btn12, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCityCommAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(172, Short.MAX_VALUE))
        );

        getContentPane().add(Option_Panel_Admin_new, "card4");

        CreatePerson_new.setBackground(new java.awt.Color(153, 204, 255));

        emailid_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailid_tfActionPerformed(evt);
            }
        });

        lblUSername.setText("UserName:");

        lblAddPErson.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblAddPErson.setText("Add Person");

        lblPersonID.setText("Person Id:");

        txtPersonId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPersonIdActionPerformed(evt);
            }
        });

        lblRole.setText("Role:");

        Per_Save_Btn.setText("SAVE");
        Per_Save_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Per_Save_BtnActionPerformed(evt);
            }
        });

        lblGender.setText("Gender:");

        jLabel76.setText("email address:");

        lblPassword.setText("Password:");

        GenderComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        cBoxRoleCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor", "Patient", "System Admin", "Community Admin", "Hospital Admin" }));

        lblCity.setText("City:");

        lblComm.setText("Community:");

        lblHouse.setText("House:");

        CityComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityComboBoxActionPerformed(evt);
            }
        });

        Back_Btn1.setText("Back");
        Back_Btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_Btn1ActionPerformed(evt);
            }
        });

        lblSpeciality.setBackground(new java.awt.Color(255, 255, 153));
        lblSpeciality.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSpeciality.setText("Enter Speciality if you are Doctor:");

        txtSpeciality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSpecialityActionPerformed(evt);
            }
        });

        lblAge.setText("Age");

        javax.swing.GroupLayout CreatePerson_newLayout = new javax.swing.GroupLayout(CreatePerson_new);
        CreatePerson_new.setLayout(CreatePerson_newLayout);
        CreatePerson_newLayout.setHorizontalGroup(
            CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreatePerson_newLayout.createSequentialGroup()
                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreatePerson_newLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAddPErson)
                            .addComponent(lblUSername)
                            .addGroup(CreatePerson_newLayout.createSequentialGroup()
                                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblGender)
                                    .addComponent(lblRole)
                                    .addComponent(jLabel76)
                                    .addComponent(lblCity)
                                    .addComponent(lblComm)
                                    .addComponent(lblHouse)
                                    .addComponent(lblPassword)
                                    .addComponent(lblPersonID)
                                    .addComponent(lblAge))
                                .addGap(67, 67, 67)
                                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(age_tf)
                                    .addComponent(txtPersonId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPersonName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(emailid_tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(GenderComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cBoxRoleCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CityComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CommunityComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(HouseComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pswdPasswordPerson, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(176, 176, 176)
                                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSpeciality)
                                    .addComponent(txtSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(CreatePerson_newLayout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(Back_Btn1)
                        .addGap(28, 28, 28)
                        .addComponent(Per_Save_Btn)))
                .addContainerGap(243, Short.MAX_VALUE))
        );
        CreatePerson_newLayout.setVerticalGroup(
            CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreatePerson_newLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(lblAddPErson)
                .addGap(18, 18, 18)
                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPersonID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPersonId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(CreatePerson_newLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(txtPersonName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pswdPasswordPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CreatePerson_newLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblUSername, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreatePerson_newLayout.createSequentialGroup()
                        .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRole, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cBoxRoleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreatePerson_newLayout.createSequentialGroup()
                        .addComponent(lblSpeciality)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GenderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSpeciality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailid_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblComm, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CommunityComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HouseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge)
                    .addComponent(age_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addGroup(CreatePerson_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back_Btn1)
                    .addComponent(Per_Save_Btn))
                .addContainerGap(147, Short.MAX_VALUE))
        );

        getContentPane().add(CreatePerson_new, "card6");

        CityCommHouse_new.setBackground(new java.awt.Color(153, 204, 255));

        lblCommCity.setText("City:");

        lblCityComm.setText("Community:");

        lblHouseCity.setText("House:");

        btnCommSave.setText("SAVE");
        btnCommSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCommSaveActionPerformed(evt);
            }
        });

        Community_tf.setText("Roxbury");

        lblHouseComm.setText("20 Moreland St");

        City_tf.setText("Boston");

        btnbackComm.setText("BACK");
        btnbackComm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackCommActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CityCommHouse_newLayout = new javax.swing.GroupLayout(CityCommHouse_new);
        CityCommHouse_new.setLayout(CityCommHouse_newLayout);
        CityCommHouse_newLayout.setHorizontalGroup(
            CityCommHouse_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CityCommHouse_newLayout.createSequentialGroup()
                .addGroup(CityCommHouse_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CityCommHouse_newLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addGroup(CityCommHouse_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(CityCommHouse_newLayout.createSequentialGroup()
                                .addComponent(lblHouseCity)
                                .addGap(120, 120, 120)
                                .addComponent(lblHouseComm, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                            .addGroup(CityCommHouse_newLayout.createSequentialGroup()
                                .addGroup(CityCommHouse_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCityComm)
                                    .addComponent(lblCommCity))
                                .addGap(92, 92, 92)
                                .addGroup(CityCommHouse_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(City_tf)
                                    .addComponent(Community_tf, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)))))
                    .addGroup(CityCommHouse_newLayout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(btnCommSave)
                        .addGap(32, 32, 32)
                        .addComponent(btnbackComm)))
                .addContainerGap(686, Short.MAX_VALUE))
        );
        CityCommHouse_newLayout.setVerticalGroup(
            CityCommHouse_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CityCommHouse_newLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(CityCommHouse_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCommCity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(City_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CityCommHouse_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCityComm, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Community_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CityCommHouse_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHouseCity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHouseComm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(CityCommHouse_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCommSave)
                    .addComponent(btnbackComm))
                .addContainerGap(371, Short.MAX_VALUE))
        );

        getContentPane().add(CityCommHouse_new, "card7");

        Per_RUD_Panel_new.setBackground(new java.awt.Color(153, 204, 255));

        lblPassCRUD.setText("Password:");

        emailid_tf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailid_tf1ActionPerformed(evt);
            }
        });

        lblUSernameCRUD.setText("UserName:");

        lblCityCRUd.setText("City:");

        jLabel73.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel73.setText("Person Details");

        lblCommCRUD.setText("Community:");

        lblPersonCRUD.setText("Person Id:");

        lblHouseCRUD.setText("House:");

        per_id_tf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                per_id_tf1ActionPerformed(evt);
            }
        });

        lblRoleCRUD.setText("Role:");

        Per_Update_Save_Btn.setText("SAVE");
        Per_Update_Save_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Per_Update_Save_BtnActionPerformed(evt);
            }
        });

        lblGenderCRUD.setText("Gender:");

        lblemailId.setText("email address:");

        PersonTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Person Id", "Role", "UserName", "City"
            }
        ));
        jScrollPane4.setViewportView(PersonTbl);

        Per_View.setText("View");
        Per_View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Per_ViewActionPerformed(evt);
            }
        });

        Per_Update.setText("Update");
        Per_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Per_UpdateActionPerformed(evt);
            }
        });

        Per_Delete.setText("Delete");
        Per_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Per_DeleteActionPerformed(evt);
            }
        });

        role_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                role_tfActionPerformed(evt);
            }
        });

        gender_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gender_tfActionPerformed(evt);
            }
        });

        city_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                city_tfActionPerformed(evt);
            }
        });

        comm_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comm_tfActionPerformed(evt);
            }
        });

        house_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                house_tfActionPerformed(evt);
            }
        });

        Back_Btn.setText("Back");
        Back_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Per_RUD_Panel_newLayout = new javax.swing.GroupLayout(Per_RUD_Panel_new);
        Per_RUD_Panel_new.setLayout(Per_RUD_Panel_newLayout);
        Per_RUD_Panel_newLayout.setHorizontalGroup(
            Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Per_RUD_Panel_newLayout.createSequentialGroup()
                .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Per_RUD_Panel_newLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel73)
                            .addComponent(lblUSernameCRUD)
                            .addGroup(Per_RUD_Panel_newLayout.createSequentialGroup()
                                .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblGenderCRUD)
                                    .addComponent(lblRoleCRUD)
                                    .addComponent(lblemailId)
                                    .addComponent(lblCityCRUd)
                                    .addComponent(lblCommCRUD)
                                    .addComponent(lblHouseCRUD)
                                    .addComponent(lblPassCRUD)
                                    .addComponent(lblPersonCRUD))
                                .addGap(67, 67, 67)
                                .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(per_id_tf1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(per_username_tf1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(emailid_tf1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(perPass_tf1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                    .addComponent(role_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(gender_tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(city_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comm_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(house_tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(Per_RUD_Panel_newLayout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Back_Btn)
                            .addComponent(Per_Update_Save_Btn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Per_RUD_Panel_newLayout.createSequentialGroup()
                        .addComponent(Per_View)
                        .addGap(18, 18, 18)
                        .addComponent(Per_Update)
                        .addGap(18, 18, 18)
                        .addComponent(Per_Delete)
                        .addGap(110, 110, 110)))
                .addGap(78, 78, 78))
        );
        Per_RUD_Panel_newLayout.setVerticalGroup(
            Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Per_RUD_Panel_newLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Per_RUD_Panel_newLayout.createSequentialGroup()
                        .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Per_RUD_Panel_newLayout.createSequentialGroup()
                                .addComponent(jLabel73)
                                .addGap(18, 18, 18)
                                .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPersonCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(per_id_tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(Per_RUD_Panel_newLayout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(per_username_tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(perPass_tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Per_RUD_Panel_newLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblUSernameCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblPassCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblRoleCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(role_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Per_RUD_Panel_newLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGenderCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gender_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblemailId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(emailid_tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Per_View)
                                .addComponent(Per_Update)
                                .addComponent(Per_Delete)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCityCRUd, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(city_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCommCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comm_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Per_RUD_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHouseCRUD, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(house_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Per_Update_Save_Btn)
                .addGap(54, 54, 54)
                .addComponent(Back_Btn)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        getContentPane().add(Per_RUD_Panel_new, "card8");

        Hospital_CRUD_new.setBackground(new java.awt.Color(153, 204, 255));

        HospNametf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HospNametfActionPerformed(evt);
            }
        });

        CityCBox_Hosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityCBox_HospActionPerformed(evt);
            }
        });

        jLabel2.setText("Hospital Name");

        jLabel3.setText("City");

        jLabel4.setText("Community");

        SaveHospbtn.setText("Save");
        SaveHospbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveHospbtnActionPerformed(evt);
            }
        });

        label1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label1.setText("Hospital Addition, Delete, Update\n");

        HospTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Hospital Name", "City", "Community"
            }
        ));
        jScrollPane5.setViewportView(HospTbl);

        Update_hosp_btn.setText("Update");
        Update_hosp_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_hosp_btnActionPerformed(evt);
            }
        });

        Del_Hosp_btn.setText("Delete");
        Del_Hosp_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Del_Hosp_btnActionPerformed(evt);
            }
        });

        SaveUpdHospbtn1.setText("Save Updated");
        SaveUpdHospbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveUpdHospbtn1ActionPerformed(evt);
            }
        });

        btnback_button_hospitalcrud.setText("Back");
        btnback_button_hospitalcrud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnback_button_hospitalcrudActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Hospital_CRUD_newLayout = new javax.swing.GroupLayout(Hospital_CRUD_new);
        Hospital_CRUD_new.setLayout(Hospital_CRUD_newLayout);
        Hospital_CRUD_newLayout.setHorizontalGroup(
            Hospital_CRUD_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Hospital_CRUD_newLayout.createSequentialGroup()
                .addGroup(Hospital_CRUD_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Hospital_CRUD_newLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Hospital_CRUD_newLayout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addGroup(Hospital_CRUD_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Hospital_CRUD_newLayout.createSequentialGroup()
                                .addComponent(SaveHospbtn)
                                .addGap(31, 31, 31)
                                .addComponent(SaveUpdHospbtn1)
                                .addGap(18, 18, 18)
                                .addComponent(Update_hosp_btn)
                                .addGap(18, 18, 18)
                                .addComponent(btnback_button_hospitalcrud))
                            .addGroup(Hospital_CRUD_newLayout.createSequentialGroup()
                                .addGroup(Hospital_CRUD_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(97, 97, 97)
                                .addGroup(Hospital_CRUD_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(HospNametf)
                                    .addComponent(CityCBox_Hosp, 0, 117, Short.MAX_VALUE)
                                    .addComponent(CommCbox_Hosp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(Hospital_CRUD_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Hospital_CRUD_newLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(Del_Hosp_btn)))
                .addGap(64, 64, 64))
        );
        Hospital_CRUD_newLayout.setVerticalGroup(
            Hospital_CRUD_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Hospital_CRUD_newLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(Hospital_CRUD_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Hospital_CRUD_newLayout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addGroup(Hospital_CRUD_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HospNametf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(Hospital_CRUD_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CityCBox_Hosp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(Hospital_CRUD_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CommCbox_Hosp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(Hospital_CRUD_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Hospital_CRUD_newLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Hospital_CRUD_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SaveHospbtn)
                            .addComponent(SaveUpdHospbtn1)
                            .addComponent(Update_hosp_btn)
                            .addComponent(btnback_button_hospitalcrud)))
                    .addGroup(Hospital_CRUD_newLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(Del_Hosp_btn)))
                .addContainerGap(297, Short.MAX_VALUE))
        );

        getContentPane().add(Hospital_CRUD_new, "card9");

        Doctor_Directory_Panel_new.setBackground(new java.awt.Color(153, 204, 255));

        Doc_Dir_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doc_ID", "Doc_User_Name", "Doc_City", "Doc_Community"
            }
        ));
        jScrollPane3.setViewportView(Doc_Dir_Table);

        Doc_View_btn.setText("View");
        Doc_View_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Doc_View_btnActionPerformed(evt);
            }
        });

        Doc_update_btn.setText("Update");
        Doc_update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Doc_update_btnActionPerformed(evt);
            }
        });

        Doc_Delete_btn.setText("Delete");
        Doc_Delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Doc_Delete_btnActionPerformed(evt);
            }
        });

        doc_id_lbl.setText("Doctor ID:");

        user_lbl.setText("User Name:");

        city_lbl.setText("City:");

        comm_lbl.setText("Communtiy:");

        spec_lbl.setText("Speciality:");

        Doc_save_btn.setText("Save");
        Doc_save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Doc_save_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Doctor_Directory_Panel_newLayout = new javax.swing.GroupLayout(Doctor_Directory_Panel_new);
        Doctor_Directory_Panel_new.setLayout(Doctor_Directory_Panel_newLayout);
        Doctor_Directory_Panel_newLayout.setHorizontalGroup(
            Doctor_Directory_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(Doctor_Directory_Panel_newLayout.createSequentialGroup()
                .addGroup(Doctor_Directory_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Doctor_Directory_Panel_newLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(Doctor_Directory_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doc_id_lbl)
                            .addComponent(user_lbl)
                            .addComponent(comm_lbl)
                            .addComponent(spec_lbl)
                            .addComponent(jLabel11)
                            .addComponent(city_lbl))
                        .addGap(42, 42, 42)
                        .addGroup(Doctor_Directory_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Doctor_Directory_Panel_newLayout.createSequentialGroup()
                                .addComponent(Doc_View_btn)
                                .addGap(150, 150, 150)
                                .addComponent(Doc_update_btn)
                                .addGap(148, 148, 148)
                                .addComponent(Doc_Delete_btn))
                            .addComponent(Doc_Id_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usr_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(city_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comm_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spec_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Doctor_Directory_Panel_newLayout.createSequentialGroup()
                        .addGap(428, 428, 428)
                        .addComponent(Doc_save_btn)))
                .addContainerGap(395, Short.MAX_VALUE))
        );
        Doctor_Directory_Panel_newLayout.setVerticalGroup(
            Doctor_Directory_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Doctor_Directory_Panel_newLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(Doctor_Directory_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Doc_View_btn)
                    .addComponent(Doc_update_btn)
                    .addComponent(Doc_Delete_btn))
                .addGap(21, 21, 21)
                .addGroup(Doctor_Directory_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doc_id_lbl)
                    .addComponent(Doc_Id_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Doctor_Directory_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user_lbl)
                    .addComponent(usr_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Doctor_Directory_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spec_lbl)
                    .addComponent(spec_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Doctor_Directory_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(city_lbl)
                    .addComponent(city_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Doctor_Directory_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comm_lbl)
                    .addComponent(comm_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Doc_save_btn)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        getContentPane().add(Doctor_Directory_Panel_new, "card10");

        Option_Panel_Patient_new.setBackground(new java.awt.Color(153, 204, 255));

        btn_Self_Details.setText("Self Details");
        btn_Self_Details.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Self_DetailsActionPerformed(evt);
            }
        });

        btn_Hospital_Search.setText("Hospitals and Doctors Near By");
        btn_Hospital_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Hospital_SearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Option_Panel_Patient_newLayout = new javax.swing.GroupLayout(Option_Panel_Patient_new);
        Option_Panel_Patient_new.setLayout(Option_Panel_Patient_newLayout);
        Option_Panel_Patient_newLayout.setHorizontalGroup(
            Option_Panel_Patient_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Option_Panel_Patient_newLayout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(btn_Self_Details, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102)
                .addComponent(btn_Hospital_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(504, Short.MAX_VALUE))
        );
        Option_Panel_Patient_newLayout.setVerticalGroup(
            Option_Panel_Patient_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Option_Panel_Patient_newLayout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addGroup(Option_Panel_Patient_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_Self_Details, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Hospital_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(439, Short.MAX_VALUE))
        );

        getContentPane().add(Option_Panel_Patient_new, "card11");

        Self_Details_Pat_new.setBackground(new java.awt.Color(153, 204, 255));

        tblPat_self.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Id", "Patient Name", "Doc Id", "Doc Name"
            }
        ));
        jScrollPane6.setViewportView(tblPat_self);

        lblSelfEncDetails.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSelfEncDetails.setText("Self Encounter Details:");

        btnBackDetails.setText("Back");
        btnBackDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Self_Details_Pat_newLayout = new javax.swing.GroupLayout(Self_Details_Pat_new);
        Self_Details_Pat_new.setLayout(Self_Details_Pat_newLayout);
        Self_Details_Pat_newLayout.setHorizontalGroup(
            Self_Details_Pat_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Self_Details_Pat_newLayout.createSequentialGroup()
                .addGroup(Self_Details_Pat_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Self_Details_Pat_newLayout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addGroup(Self_Details_Pat_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSelfEncDetails)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Self_Details_Pat_newLayout.createSequentialGroup()
                        .addGap(279, 279, 279)
                        .addComponent(btnBackDetails)))
                .addContainerGap(341, Short.MAX_VALUE))
        );
        Self_Details_Pat_newLayout.setVerticalGroup(
            Self_Details_Pat_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Self_Details_Pat_newLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblSelfEncDetails)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBackDetails)
                .addContainerGap(418, Short.MAX_VALUE))
        );

        getContentPane().add(Self_Details_Pat_new, "card12");

        PatView_Hosp_Panel_new.setBackground(new java.awt.Color(153, 204, 255));

        HospTbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Hospital Name", "City", "Community"
            }
        ));
        jScrollPane7.setViewportView(HospTbl1);

        lblSearch.setText("Search By ");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        Doc_Dir_Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doc_ID", "Doc_User_Name", "Doc_City", "Doc_Community"
            }
        ));
        jScrollPane8.setViewportView(Doc_Dir_Table1);

        lblHospList.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblHospList.setText("Hospital List");

        lblDocList.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblDocList.setText("Doctors List");

        btnBackHospPanel.setText("Back");

        javax.swing.GroupLayout PatView_Hosp_Panel_newLayout = new javax.swing.GroupLayout(PatView_Hosp_Panel_new);
        PatView_Hosp_Panel_new.setLayout(PatView_Hosp_Panel_newLayout);
        PatView_Hosp_Panel_newLayout.setHorizontalGroup(
            PatView_Hosp_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatView_Hosp_Panel_newLayout.createSequentialGroup()
                .addGroup(PatView_Hosp_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PatView_Hosp_Panel_newLayout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(lblSearch)
                        .addGap(46, 46, 46)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PatView_Hosp_Panel_newLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(PatView_Hosp_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHospList))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                        .addGroup(PatView_Hosp_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDocList)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(PatView_Hosp_Panel_newLayout.createSequentialGroup()
                .addGap(278, 278, 278)
                .addComponent(btnBackHospPanel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PatView_Hosp_Panel_newLayout.setVerticalGroup(
            PatView_Hosp_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PatView_Hosp_Panel_newLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(PatView_Hosp_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PatView_Hosp_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHospList)
                    .addComponent(lblDocList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PatView_Hosp_Panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnBackHospPanel)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        getContentPane().add(PatView_Hosp_Panel_new, "card13");

        RUD_Enc_panel_new.setBackground(new java.awt.Color(153, 204, 255));

        tblEnc1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Patient Id", "Patient Name", "Doc Id", "Doc Name", "Time"
            }
        ));
        jScrollPane12.setViewportView(tblEnc1);

        jLabel61.setText("Temp");

        Save_Enc_btn1.setText("SAVE");
        Save_Enc_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_Enc_btn1ActionPerformed(evt);
            }
        });

        lblDocIdEnc.setText("Doctor Id:");

        heartRate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartRate1ActionPerformed(evt);
            }
        });

        lblPatNameEnc.setText("Patient Name:");

        jLabel92.setText("Patient Id:");

        Temp_tf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Temp_tf1ActionPerformed(evt);
            }
        });

        jLabel93.setText("Patient Age:");

        jLabel94.setText("Doctor Name :");

        jLabel95.setText("BP:");

        btnbackencounter1.setText("BACK");
        btnbackencounter1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackencounter1ActionPerformed(evt);
            }
        });

        jLabel96.setText("HeartRate");

        jLabel98.setText("Date");

        txtBPEnc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBPEncActionPerformed(evt);
            }
        });

        btnViewEnc.setText("View");
        btnViewEnc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEncActionPerformed(evt);
            }
        });

        btnUpdateEnc.setText("Update");
        btnUpdateEnc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateEncActionPerformed(evt);
            }
        });

        btnDeleteEnc.setText("Delete");
        btnDeleteEnc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEncActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RUD_Enc_panel_newLayout = new javax.swing.GroupLayout(RUD_Enc_panel_new);
        RUD_Enc_panel_new.setLayout(RUD_Enc_panel_newLayout);
        RUD_Enc_panel_newLayout.setHorizontalGroup(
            RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RUD_Enc_panel_newLayout.createSequentialGroup()
                .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RUD_Enc_panel_newLayout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 668, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RUD_Enc_panel_newLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(RUD_Enc_panel_newLayout.createSequentialGroup()
                                    .addComponent(jLabel92)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtPatIdEnc, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(RUD_Enc_panel_newLayout.createSequentialGroup()
                                    .addComponent(lblDocIdEnc)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtDocIdEnc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(doc_name_tf2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel94)
                                .addGroup(RUD_Enc_panel_newLayout.createSequentialGroup()
                                    .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel93)
                                        .addComponent(lblPatNameEnc)
                                        .addComponent(jLabel95)
                                        .addComponent(jLabel61)
                                        .addComponent(jLabel96))
                                    .addGap(67, 67, 67)
                                    .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtBPEnc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Patient_Age_tf1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(heartRate1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Temp_tf1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Patient_Name_tf1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RUD_Enc_panel_newLayout.createSequentialGroup()
                                    .addComponent(jLabel98)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(calStartDateEnc, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(RUD_Enc_panel_newLayout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(Save_Enc_btn1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnbackencounter1))))
                    .addGroup(RUD_Enc_panel_newLayout.createSequentialGroup()
                        .addGap(376, 376, 376)
                        .addComponent(btnViewEnc)
                        .addGap(62, 62, 62)
                        .addComponent(btnUpdateEnc)
                        .addGap(52, 52, 52)
                        .addComponent(btnDeleteEnc)))
                .addContainerGap(322, Short.MAX_VALUE))
        );
        RUD_Enc_panel_newLayout.setVerticalGroup(
            RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RUD_Enc_panel_newLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewEnc)
                    .addComponent(btnUpdateEnc)
                    .addComponent(btnDeleteEnc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDocIdEnc, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDocIdEnc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(RUD_Enc_panel_newLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(doc_name_tf2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPatIdEnc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RUD_Enc_panel_newLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel94, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel92, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Patient_Name_tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatNameEnc, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel93, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Patient_Age_tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel95, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBPEnc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Temp_tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel96, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heartRate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calStartDateEnc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel98, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(RUD_Enc_panel_newLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Save_Enc_btn1)
                    .addComponent(btnbackencounter1))
                .addContainerGap())
        );

        getContentPane().add(RUD_Enc_panel_new, "card14");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginActionPerformed
//        Login2Panel loginPanel = new Login2Panel(history);
        LoginPanel.setVisible(true);
        
        SplitPane.setRightComponent(LoginPanel);

// TODO add your handling code here:
    }//GEN-LAST:event_LoginActionPerformed

    private void BtnMainLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMainLoginActionPerformed
        // TODO add your handling code here:

        String id = txtUserNameMain.getText();
        String pass = pswdPasswordMain.getText();
        String role = String.valueOf(cBoxRole.getSelectedItem());
        int check = 0;

        for(Person emp: personList.getHistory()){
            if(emp.getUserName().equals(id) && emp.getRole().equals(role)&& role.equals("Doctor")) {
                Object[] row = new Object[4];
                row[0] = emp;
                row[1] = emp.getPassword();
                if(row[1].equals(pass)){
                    check = 1;
                    JOptionPane.showMessageDialog(null, "Login Successful");
//                    Encounter_Panel.setVisible(true);
                    Option_Panel_Doctor.setVisible(true);
                    Option_Panel_Admin_new.setVisible(false);
                    Encounter_Panel_new.setVisible(false);
//                    SplitPane.setVisible(false);
                    SplitPane.setRightComponent(Option_Panel_Doctor);
                    tblEncPat.setVisible(false);
                    break;
                    
                }
            }
            else if(role.equals("System Admin") && emp.getUserName().equals(id) && emp.getRole().equals(role)) {
                
                Object[] row = new Object[4];
                row[0] = emp;
                row[1] = emp.getPassword();
                if(row[1].equals(pass)){
                    check = 1;
                    JOptionPane.showMessageDialog(null, "Login Successfull_"+role);
//                    Encounter_Panel.setVisible(true);
                    btnCityCommAdd.setVisible(true);
                    btnAddPerson.setVisible(true);
                    btnVUD.setVisible(true);
                    Option_Panel_Admin_new.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin_new);
                    Option_Panel_Doctor.setVisible(false);
                    
                    Encounter_Panel_new.setVisible(false);
//                    
                    
                    
                    tblEncPat.setVisible(false);
                    break;
                }
                
                else{
                    JOptionPane.showMessageDialog(null, "Password Incorrect");
                }
            }
            else if(role.equals("Community Admin") && emp.getUserName().equals(id) && emp.getRole().equals(role)) {
                
                Object[] row = new Object[4];
                row[0] = emp;
                row[1] = emp.getPassword();
                if(row[1].equals(pass)){
                    check = 1;
                    JOptionPane.showMessageDialog(null, "Login Successfull_"+role);
                    btnCityCommAdd.setVisible(true);
                    btnAddPerson.setVisible(false);
                    btnVUD.setVisible(false);
                    btnEnctrOpt.setVisible(false);
//                    Encounter_Panel.setVisible(true);
                    Option_Panel_Admin_new.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin_new);
                    Option_Panel_Doctor.setVisible(false);
                    
                    Encounter_Panel_new.setVisible(false);
//                    ControlPanel.setVisible(true);
//                    SplitPane.setVisible(false);
                    
                    tblEncPat.setVisible(false);
                    break;
                }
                
                else{
                    JOptionPane.showMessageDialog(null, "Password Incorrect");
                }
            }
            else if(role.equals("Hospital Admin") && emp.getUserName().equals(id) && emp.getRole().equals(role)) {
                
                Object[] row = new Object[4];
                row[0] = emp;
                row[1] = emp.getPassword();
                if(row[1].equals(pass)){
                    check = 1;
                    JOptionPane.showMessageDialog(null, "Login Successfull_"+role);
                    btnCityCommAdd.setVisible(true);
                    btnVUD.setVisible(false);
                    btnAddPerson.setVisible(false);
//                    Encounter_Panel.setVisible(true);
                    Option_Panel_Admin_new.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin_new);
                    Option_Panel_Doctor.setVisible(false);
                    btnEnctrOpt.setVisible(true);
                    
                    Encounter_Panel_new.setVisible(false);
//                    ControlPanel.setVisible(true);
//                    SplitPane.setVisible(false);
                    
                    tblEncPat.setVisible(false);
                    break;
                }
                
                else{
                    JOptionPane.showMessageDialog(null, "Password Incorrect");
                }
            }
            else if(role.equals("Patient") && emp.getUserName().equals(id) && emp.getRole().equals(role)) {
                
                Object[] row = new Object[4];
                row[0] = emp;
                row[1] = emp.getPassword();
                if(row[1].equals(pass)){
                    check = 1;
                    
                    JOptionPane.showMessageDialog(null, "Login Successfull_"+role);
//                    btnAddCityCommunity.setVisible(true);
//                    Encounter_Panel.setVisible(true);
                    Option_Panel_Patient_new.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Patient_new);
                    Hospital_CRUD_new.setVisible(false);
                    Option_Panel_Doctor.setVisible(false);
                    Option_Panel_Admin_new.setVisible(false);
                    CityCommHouse_new.setVisible(false);
                    Per_RUD_Panel_new.setVisible(false);
                    glb_pat_id =emp.getId();
                    
                    Encounter_Panel_new.setVisible(false);
//                    ControlPanel.setVisible(true);
//                    SplitPane.setVisible(false);
                    
                    tblEncPat.setVisible(false);
                    break;
                }
                
                else{
                    JOptionPane.showMessageDialog(null, "Password Incorrect");
                }
            }
        }
            if(check == 0)
               
            {
                JOptionPane.showMessageDialog(null, "Check username or Password or role");
            }

            
            
        
    }//GEN-LAST:event_BtnMainLoginActionPerformed

    private void btnMainSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainSaveActionPerformed
        // TODO add your handling code here:
        String username = txtUserNameMain.getText();
        String pass = pswdPasswordMain.getText();
        String role = String.valueOf(cBoxRole.getSelectedItem());

        Person ed = personList.addNewDetails();

        ed.setUserName(username);
        ed.setPassword(pass);
        ed.setRole(role);
        JOptionPane.showMessageDialog(null, "Saved Successfully");
    }//GEN-LAST:event_btnMainSaveActionPerformed

    private void cBoxRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBoxRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cBoxRoleActionPerformed

    private void txtUserNameMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameMainActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameMainActionPerformed

    private void Temp_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Temp_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Temp_tfActionPerformed

    private void BP_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BP_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BP_tfActionPerformed

    private void Save_Enc_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_Enc_btnActionPerformed
        int doc_id = Integer.parseInt(doc_id_tf.getText());
        String doc_name= doc_name_tf1.getText();
        int pat_id = Integer.parseInt(pat_id_tf.getText());
        String patient_name = Patient_Name_tf.getText();
        int age = Integer.parseInt(Patient_Age_tf.getText());
        int BP =Integer.parseInt( BP_tf.getText());
        double temp = Integer.parseInt(Temp_tf.getText());
        int HeartRate =Integer.parseInt( heartRate.getText());
        Date start_date = StartDate.getDate();
        
        
        VitalSigns vs = EncList.addNewDetails();

        vs.setDoc_name(doc_name);
        vs.setDoc_id(doc_id);
        vs.setPat_id(pat_id);
        vs.setBP(BP);
        vs.setTemp(temp);
        vs.setHeartRate(HeartRate);
        vs.setPatient_name(patient_name);
        vs.setAge(age);
        vs.setStart_date(start_date);
        
//        ed.setSyst_BP(syst_BP);
//        ed.setDyst_BP(dyst_BP);
//        ed.setHeartRate(HeartRate);
//        ed.setWt(wt);
//        ed.setHt(ht);
//        
        populatEncounterdirectory();
        
//        ed.setEmail_address(email_address);
//        ed.setPosition(position);
//        ed.setImagepath(new ImageIcon(prof_pic));



            JOptionPane.showMessageDialog(this, "Patient Info Added");

        
        
        


// TODO add your handling code here:
    }//GEN-LAST:event_Save_Enc_btnActionPerformed

    private void heartRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heartRateActionPerformed

    private void btnDoc_Panel_EncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoc_Panel_EncounterActionPerformed
        // TODO add your handling code here:
        populatePatientTable();
        populateDoctorTable();
        Encounter_Panel_new.setVisible(true);
        SplitPane.setRightComponent(Encounter_Panel_new);
    }//GEN-LAST:event_btnDoc_Panel_EncounterActionPerformed
    private void populatePatientTable(){
    
         DefaultTableModel model = (DefaultTableModel) tblpatienthistory_dp1.getModel();
        model.setRowCount(0);
        
        for ( Patient_Details pd : pat_history.getHistory()){
            
            
            
            Object[] row = new Object[4];
            
            row[0]= pd;
            row[1]= pd.getPatient_name();
            row[2]= pd.getCity();
            row[3]= pd.getAge();
            
            model.addRow(row);}     
        
    }
    
    private void populateDoctorTable() {
       DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table2.getModel();
        model.setRowCount(0);
        
        for ( Doctor ed : DoctorList.getHistory()){
            
            
            Object[] row = new Object[4];
            
            row[0]= ed;
            row[1]= ed.getDoc_name();
            row[2]= ed.getAge();
            row[3]= ed.getCity();
//            row[4]= ed.getCommunity();
//            row[3]= ed.getHeartRate();
            
            model.addRow(row);
            
            
        }}
    private void btnPatDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatDirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPatDirActionPerformed

    private void btnEnctrHistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnctrHistActionPerformed
                    tblEncPat.setVisible(true);
                    populatEncounter2directory();
                    RUD_Enc_panel_new.setVisible(true);
                    SplitPane.setRightComponent(RUD_Enc_panel_new);
                    CityCommHouse_new.setVisible(false);
                    CreatePerson_new.setVisible(false);
                    Option_Panel_Doctor.setVisible(false);
                    Option_Panel_Admin_new.setVisible(false);
                    Per_RUD_Panel_new.setVisible(false);
                    
                    Encounter_Panel_new.setVisible(false);
        
//        populatedirectory_2();
//        populatedirectory();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEnctrHistActionPerformed

    private void btnCityCommAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCityCommAddActionPerformed
                    
                    CityCommHouse_new.setVisible(true);
                    SplitPane.setRightComponent(CityCommHouse_new);
                    CreatePerson_new.setVisible(false);
                    Option_Panel_Doctor.setVisible(false);
                    Option_Panel_Admin_new.setVisible(false);
                    
                    Encounter_Panel_new.setVisible(false);
                    
        
// TODO add your handling code here:
    }//GEN-LAST:event_btnCityCommAddActionPerformed

    private void btnVUDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVUDActionPerformed
                    Per_RUD_Panel_new.setVisible(true);
                    SplitPane.setRightComponent(Per_RUD_Panel_new);
                    CityCommHouse_new.setVisible(false);
                    CreatePerson_new.setVisible(false);
                    Option_Panel_Doctor.setVisible(false);
                    Option_Panel_Admin_new.setVisible(false);
                    populatePersondirectory();
                    
                    Encounter_Panel_new.setVisible(false); // TODO add your handling code here:
    }//GEN-LAST:event_btnVUDActionPerformed

    private void emailid_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailid_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailid_tfActionPerformed

    private void Per_Save_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Per_Save_BtnActionPerformed
        int check_2=0;    
        int id = Integer.parseInt(txtPersonId.getText());
            for(Person emp: personList.getHistory()){
                   if(emp.getId()==id) {
                       JOptionPane.showMessageDialog(null, "Person ID already exists");
                       check_2=10;
                       break;
                    }
                   
            }
         
        // VALIDATION FOR THE FIELDS WHICH CAN BE UPDATED
          boolean check ; 
        
//        check = per_id_tf1.getText().matches("^[a-zA-Z]+$");
        String id_2 = txtPersonId.getText();
        check = id_2.matches("^[0-9]+$");
        if(!check) {
            JOptionPane.showMessageDialog(null, "Id must be numeric");
            return;
        }
        

        
        check = txtPersonName.getText().matches("^[a-zA-Z]+$");
        if(check == false) {
            JOptionPane.showMessageDialog(null, "UserName cannot have integer values");
            return;
        }
        check = emailid_tf.getText().matches("^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        
        if(!check) {
            JOptionPane.showMessageDialog(null, "Email Address must be in format of X@Y.Z");
            return;
        }
        
        if (txtPersonName.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter Employee First Name");
        }
        if (pswdPasswordPerson.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter Employee Last Name");
        }
       
        if ((emailid_tf.getText().equals("")) ){
            JOptionPane.showMessageDialog(this, "Please enter your Email address ");
         
        }
        
        String age = age_tf.getText();
        check = age.matches("^[0-9]+$");
        if(!check) {
            JOptionPane.showMessageDialog(null, "Age must be numeric");
           
        }
        
        else{
           
        if (check_2==0){    
          
        
        String username = txtPersonName.getText();
        String pass = pswdPasswordPerson.getText();
        String role = String.valueOf(cBoxRoleCombo.getSelectedItem());
        String gender = String.valueOf(GenderComboBox.getSelectedItem());
        String email = emailid_tf.getText();
        String city = String.valueOf(CityComboBox.getSelectedItem());
        String comm = String.valueOf(CommunityComboBox2.getSelectedItem());
        String house = String.valueOf(HouseComboBox.getSelectedItem());
        String spl =txtSpeciality.getText();
        int age2 = Integer.parseInt(age_tf.getText());
        
        Person pn =  personList.addNewDetails();
//        Person pn = new Person();
        pn.setUserName(username);
        pn.setPassword(pass);
        pn.setId(id);
        pn.setRole(role);
        pn.setEmail(email);
        pn.setGender(gender);
        pn.setCity(city);
        pn.setCommunity(comm);
        pn.setHouse(house);
        pn.setAge(age2);
        
        if(role.equals("Doctor")){
            if (txtSpeciality.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter Speciality Last Name");
            return;
        }
        
        Doctor doc =  DoctorList.addNewDetails();
//        Person pn = new Person();
        doc.setDoc_name(username);
        doc.setDoc_id(id);
        doc.setAge(age2);
        doc.setCity(city);
        doc.setCommunity(comm);
        doc.setSpeciality(spl);
        
//        JOptionPane.showMessageDialog(null, "Person Details Saved Successfully as Doctor");
        }
        if(role.equals("Patient")){
        Patient_Details pat =  pat_history.addNewDetails();
//        Person pn = new Person();
        pat.setPat_id(id);
        pat.setPatient_name(username);
        pat.setAge(age2);
        pat.setCity(city);
        pat.setComm(comm);
//        doc.setSpeciality(spl);
        
        
        }
        JOptionPane.showMessageDialog(null, "Person Details Saved Successfully as "+role);
        txtPersonName.setText("");
        pswdPasswordPerson.setText("");
        txtPersonId.setText("");
//        role_tf.setText("");
//        gender_tf.setText("");
        emailid_tf.setText("");
//        city_tf.setText("");
//        comm_tf.setText("");
//        house_tf.setText("");
        age_tf.setText("");
        
        
        }
        }
        
  
        
//        personList.addNewDetails(pn);
        
   


        // TODO add your handling code here:
    }//GEN-LAST:event_Per_Save_BtnActionPerformed

    private void txtPersonIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPersonIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPersonIdActionPerformed

    private void btnAddPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPersonActionPerformed
        CreatePerson_new.setVisible(true);          
        SplitPane.setRightComponent(CreatePerson_new);
        Option_Panel_Doctor.setVisible(false);
        Option_Panel_Admin_new.setVisible(false);
        Encounter_Panel_new.setVisible(false); 
    }//GEN-LAST:event_btnAddPersonActionPerformed

    private void btnCommSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCommSaveActionPerformed
        String city = City_tf.getText();
        String comm = Community_tf.getText();
        String house = lblHouseComm.getText();
        
        
        CityComboBox.addItem(city);
        CityCBox_Hosp.addItem(city);
        CommunityComboBox2.addItem(comm);
        CommCbox_Hosp.addItem(comm);
        HouseComboBox.addItem(house);

        JOptionPane.showMessageDialog(null, "Community Details Added");
// TODO add your handling code here:
    }//GEN-LAST:event_btnCommSaveActionPerformed

    private void CityComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityComboBoxActionPerformed

    private void emailid_tf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailid_tf1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailid_tf1ActionPerformed

    private void per_id_tf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_per_id_tf1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_per_id_tf1ActionPerformed

    private void Per_Update_Save_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Per_Update_Save_BtnActionPerformed
        // TODO add your handling code here:
         
        int selectedRowIndex = PersonTbl.getSelectedRow();
 
         
        if(selectedRowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please select a row to update");
                return;

            }
        
        
        // VALIDATION FOR THE FIELDS WHICH CAN BE UPDATED
          boolean check ; 
        
//        check = per_id_tf1.getText().matches("^[a-zA-Z]+$");
        String age_2 = per_id_tf1.getText();
        check = age_2.matches("^[0-9]+$");
        if(!check) {
            JOptionPane.showMessageDialog(null, "Id must be numeric");
            return;
        }
        

        
        check = per_username_tf1.getText().matches("^[a-zA-Z]+$");
        if(check == false) {
            JOptionPane.showMessageDialog(null, "UserName cannot have integer values");
            return;
        }
        check = perPass_tf1.getText().matches("^[a-zA-Z]+$");
        
        
        
        
        check = emailid_tf1.getText().matches("^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        
        if(!check) {
            JOptionPane.showMessageDialog(null, "Email Address must be in format of X@Y.Z");
            return;
        }
        
        if (per_username_tf1.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter Employee First Name");
        }
        if (perPass_tf1.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter Employee Last Name");
        }
       
        if ((emailid_tf1.getText().equals("")) ){
            JOptionPane.showMessageDialog(this, "Please enter your Email address ");
         
        }
        
        else{
        //    SAVE FUNCTIONALITY OF UPDATED FEATURES
         

        String username = per_username_tf1.getText();
        String pass = perPass_tf1.getText();
        int Person_ID = Integer.parseInt(per_id_tf1.getText());  
        String role = String.valueOf(cBoxRoleCombo.getSelectedItem());
        String gender = String.valueOf(GenderComboBox.getSelectedItem());
        String email = emailid_tf.getText();
//        String city = String.valueOf(CityComboBox1.getSelectedItem());
//        String comm = String.valueOf(CommunityComboBox3.getSelectedItem());
//        String house = String.valueOf(HouseComboBox1.getSelectedItem());
//        String email = emailid_tf.getText();
        
        
        
        
//        personList.addNewDetails(pn);
        
        JOptionPane.showMessageDialog(null, "Person Details Saved Successfully");
   

//        JOptionPane.showMessageDialog(this, "Employee Details Updated");


        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel(); 
        Person pn = (Person)model.getValueAt(selectedRowIndex, 0);


//       Person pn =  personList.addNewDetails();
//        Person pn = new Person();
        pn.setUserName(username);
        pn.setPassword(pass);
        pn.setId(Person_ID);
        pn.setRole(role);
        pn.setEmail(email);
        pn.setGender(gender);
//        pn.setCity(city);
//        pn.setCommunity(comm);
//        pn.setHouse(house);
        
        
        
        
        

        populatePersondirectory();
        }
       
    }//GEN-LAST:event_Per_Update_Save_BtnActionPerformed

    private void Per_ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Per_ViewActionPerformed
        Per_Update_Save_Btn.setVisible(false);
        int selectedRowIndex = PersonTbl.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel();
        
        Person selectedPersonDetails = (Person) model.getValueAt(selectedRowIndex, 0);
        
        
        per_username_tf1.setText(selectedPersonDetails.getUserName());
        perPass_tf1.setText(selectedPersonDetails.getPassword());
        per_id_tf1.setText(String.valueOf(selectedPersonDetails.getId()));
        role_tf.setText(String.valueOf(selectedPersonDetails.getRole()));
        gender_tf.setText(String.valueOf(selectedPersonDetails.getGender()));
        emailid_tf1.setText(selectedPersonDetails.getEmail());
        city_tf.setText(selectedPersonDetails.getCity());
        comm_tf.setText(selectedPersonDetails.getCommunity());
        house_tf.setText(selectedPersonDetails.getHouse());
        
        per_username_tf1.setEditable(false);
        perPass_tf1.setEditable(false);
        per_id_tf1.setEditable(false);
        role_tf.setEditable(false);
        gender_tf.setEditable(false);
        emailid_tf1.setEditable(false);
        city_tf.setEditable(false);
        comm_tf.setEditable(false);
        house_tf.setEditable(false);
        
        
        
                // TODO add your handling code here:
    }//GEN-LAST:event_Per_ViewActionPerformed

    private void Per_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Per_UpdateActionPerformed
        // TODO add your handling code here:
        Per_Update_Save_Btn.setVisible(true);
        int selectedRowIndex = PersonTbl.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel();
        
        Person selectedPersonDetails = (Person) model.getValueAt(selectedRowIndex, 0);
        
        
        per_username_tf1.setText(selectedPersonDetails.getUserName());
        perPass_tf1.setText(selectedPersonDetails.getPassword());
        per_id_tf1.setText(String.valueOf(selectedPersonDetails.getId()));
        role_tf.setText(String.valueOf(selectedPersonDetails.getRole()));
        gender_tf.setText(String.valueOf(selectedPersonDetails.getGender()));
        emailid_tf1.setText(selectedPersonDetails.getEmail());
        city_tf.setText(selectedPersonDetails.getCity());
        comm_tf.setText(selectedPersonDetails.getCommunity());
        house_tf.setText(selectedPersonDetails.getHouse());
        
        per_username_tf1.setEditable(true);
        perPass_tf1.setEditable(true);
        per_id_tf1.setEditable(false);
        role_tf.setEditable(false);
        gender_tf.setEditable(false);
        emailid_tf1.setEditable(true);
        city_tf.setEditable(false);
        comm_tf.setEditable(false);
        house_tf.setEditable(false);
    }//GEN-LAST:event_Per_UpdateActionPerformed

    private void Per_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Per_DeleteActionPerformed

        // TODO add your handling code here:
        Per_Update_Save_Btn.setVisible(true);
        int selectedRowIndex = PersonTbl.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel();
        
        Person selectedPersonDetails = (Person) model.getValueAt(selectedRowIndex, 0);
        
        personList.deleteEmployeeDetails(selectedPersonDetails);
       
        
        populatePersondirectory();
        
        per_username_tf1.setText("");
        perPass_tf1.setText("");
        per_id_tf1.setText("");
        role_tf.setText("");
        gender_tf.setText("");
        emailid_tf1.setText("");
        city_tf.setText("");
        comm_tf.setText("");
        house_tf.setText("");
        
        per_username_tf1.setEditable(false);
        perPass_tf1.setEditable(false);
        per_id_tf1.setEditable(false);
        role_tf.setEditable(false);
        gender_tf.setEditable(false);
        emailid_tf1.setEditable(false);
        city_tf.setEditable(false);
        comm_tf.setEditable(false);
        house_tf.setEditable(false);
        
        
    }//GEN-LAST:event_Per_DeleteActionPerformed

    private void role_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_role_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_role_tfActionPerformed

    private void gender_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gender_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gender_tfActionPerformed

    private void city_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_city_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_city_tfActionPerformed

    private void comm_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comm_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comm_tfActionPerformed

    private void house_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_house_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_house_tfActionPerformed

    private void Back_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_BtnActionPerformed
        // TODO add your handling code here:
                    btnCityCommAdd.setVisible(false);
                    Option_Panel_Admin_new.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin_new);
                    Option_Panel_Doctor.setVisible(false);
                    
                    Encounter_Panel_new.setVisible(false);
//                  
    }//GEN-LAST:event_Back_BtnActionPerformed

    private void Back_Btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_Btn1ActionPerformed
        // TODO add your handling code here:
                    btnCityCommAdd.setVisible(false);
                    Option_Panel_Admin_new.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin_new);
                    Option_Panel_Doctor.setVisible(false);
                    
                    Encounter_Panel_new.setVisible(false);
//                  
    }//GEN-LAST:event_Back_Btn1ActionPerformed

    private void HospNametfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HospNametfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HospNametfActionPerformed

    private void btn_Hosp_opActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Hosp_opActionPerformed
        // TODO add your handling code here:
                    
                    Hospital_CRUD_new.setVisible(true);
                    SplitPane.setRightComponent(Hospital_CRUD_new);
                    Option_Panel_Doctor.setVisible(false);
                    
                    Encounter_Panel_new.setVisible(false);
                    SaveUpdHospbtn1.setVisible(false);
    }//GEN-LAST:event_btn_Hosp_opActionPerformed

    private void SaveHospbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveHospbtnActionPerformed
        // TODO add your handling code here:
        if (HospNametf.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Enter Hospital Name");
            return;
        }
        else{
        String hosp_name = HospNametf.getText();
        String city = String.valueOf(CityCBox_Hosp.getSelectedItem());
        String comm = String.valueOf(CommCbox_Hosp.getSelectedItem());
        
         
        Hospital hp =  HospitalList.addNewDetails();
//        Person pn = new Person();
        hp.setCity(city);
        hp.setComm(comm);
        hp.setHosp(hosp_name);
        
        populateHospdirectory();}
        
        
//        String email = emailid_tf.getText();


    }//GEN-LAST:event_SaveHospbtnActionPerformed

    private void Update_hosp_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_hosp_btnActionPerformed
        // TODO add your handling code here:
//        
          
        int selectedRowIndex = HospTbl.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
//        Per_Update_Save_Btn.setVisible(true);
        SaveUpdHospbtn1.setVisible(true);
        SaveHospbtn.setVisible(false);
        DefaultTableModel model = (DefaultTableModel) HospTbl.getModel();
        
        Hospital selectedHospitalDetails = (Hospital) model.getValueAt(selectedRowIndex, 0);
        
        
        HospNametf.setText(selectedHospitalDetails.getHosp());
        CityCBox_Hosp.setEditable(false);
        CommCbox_Hosp.setEditable(false);
        
    }//GEN-LAST:event_Update_hosp_btnActionPerformed

    private void Del_Hosp_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Del_Hosp_btnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = HospTbl.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) HospTbl.getModel();
        Hospital selectedHospitalDetails = (Hospital) model.getValueAt(selectedRowIndex, 0);
        
        HospitalList.deleteEmployeeDetails(selectedHospitalDetails);
       
        
        populateHospdirectory();
        HospNametf.setText("");
 
        
    }//GEN-LAST:event_Del_Hosp_btnActionPerformed

    private void SaveUpdHospbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveUpdHospbtn1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = HospTbl.getSelectedRow();
         
        if(selectedRowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please select a row to update");
                return;

            }
        
        if (HospNametf.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Enter Hospital Name");
            return;
        }
        else{
        String hosp_name = HospNametf.getText();
        
         
        DefaultTableModel model = (DefaultTableModel) HospTbl.getModel(); 
        Hospital selectedHospitalDetails = (Hospital) model.getValueAt(selectedRowIndex, 0);
        


//       Person pn =  personList.addNewDetails();
//        Person pn = new Person();
        selectedHospitalDetails.setHosp(hosp_name);
        populateHospdirectory();}
        
        
    }//GEN-LAST:event_SaveUpdHospbtn1ActionPerformed

    private void btnEnctrOptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnctrOptActionPerformed
        // TODO add your handling code here:
                    Option_Panel_Doctor.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Doctor);
                    Hospital_CRUD_new.setVisible(false);
                    Encounter_Panel_new.setVisible(false);
                    
                    
                    SaveUpdHospbtn1.setVisible(false);
    }//GEN-LAST:event_btnEnctrOptActionPerformed

    private void btnDocDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocDirActionPerformed
        // TODO add your handling code here:
        populateDocdirectory();        
        Doctor_Directory_Panel_new.setVisible(true);
                SplitPane.setRightComponent(Doctor_Directory_Panel_new);
                Option_Panel_Doctor.setVisible(false);
                Hospital_CRUD_new.setVisible(false);
                Encounter_Panel_new.setVisible(false);
                CreatePerson_new.setVisible(false);
                 SaveUpdHospbtn1.setVisible(false);
                    
        
    }//GEN-LAST:event_btnDocDirActionPerformed

    private void txtSpecialityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSpecialityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSpecialityActionPerformed

    private void Doc_update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Doc_update_btnActionPerformed
        // TODO add your handling code here:
         Doc_save_btn.setVisible(true);
        int selectedRowIndex = Doc_Dir_Table.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table.getModel();
        
        Doctor selectedDoctors =(Doctor) model.getValueAt(selectedRowIndex, 0);
        
        
        Doc_Id_txt.setText(String.valueOf(selectedDoctors.getDoc_id()));
        usr_txt.setText(selectedDoctors.getDoc_name());
//        pass_txt.setText(String.valueOf(selectedDoctors.get()));
//        gen_txt.setText(String.valueOf(selectedDoctors.g()));
//        mail_txt.setText(String.valueOf(selectedDoctors.get()));
        city_txt.setText(selectedDoctors.getCity());
        comm_txt.setText(selectedDoctors.getCommunity());
        spec_txt.setText(selectedDoctors.getSpeciality());
        
        Doc_Id_txt.setEditable(false);
        usr_txt.setEditable(true);
        city_txt.setEditable(false);
        comm_txt.setEditable(false);
        spec_txt.setEditable(true);
        
    }//GEN-LAST:event_Doc_update_btnActionPerformed

    private void Doc_View_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Doc_View_btnActionPerformed
        // TODO add your handling code here:
        
//        Per_Update_Save_Btn.setVisible(false);
        int selectedRowIndex = Doc_Dir_Table.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table.getModel();
        
        Doctor selectedDoctors =(Doctor) model.getValueAt(selectedRowIndex, 0);
        
        
        Doc_Id_txt.setText(String.valueOf(selectedDoctors.getDoc_id()));
        usr_txt.setText(selectedDoctors.getDoc_name());
//        pass_txt.setText(String.valueOf(selectedDoctors.get()));
//        gen_txt.setText(String.valueOf(selectedDoctors.g()));
//        mail_txt.setText(String.valueOf(selectedDoctors.get()));
        city_txt.setText(selectedDoctors.getCity());
        comm_txt.setText(selectedDoctors.getCommunity());
        spec_txt.setText(selectedDoctors.getSpeciality());
        
        Doc_Id_txt.setEditable(false);
        usr_txt.setEditable(false);
        city_txt.setEditable(false);
        comm_txt.setEditable(false);
        spec_txt.setEditable(false);
     
        
        
    }//GEN-LAST:event_Doc_View_btnActionPerformed

    private void Doc_Delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Doc_Delete_btnActionPerformed
        // TODO add your handling code here:
        
       int selectedRowIndex = Doc_Dir_Table.getSelectedRow();
       if(selectedRowIndex<0){
           JOptionPane.showMessageDialog(this, "Please select a row to delete");
           return;
       }
       
       DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table.getModel();
       Doctor selectedDoctors =(Doctor) model.getValueAt(selectedRowIndex, 0);
       
       DoctorList.deleteDoctors(selectedDoctors);
       populateDocdirectory();
       JOptionPane.showMessageDialog(this, "Doctor Details deleted successfully");
       
       
       
    }//GEN-LAST:event_Doc_Delete_btnActionPerformed

    private void Doc_save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Doc_save_btnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = Doc_Dir_Table.getSelectedRow();
        
        int Doc_ID = Integer.parseInt(Doc_Id_txt.getText());  
        String username = usr_txt.getText();
        String city = city_txt.getText();
        String comm = comm_txt.getText();
        String spec = spec_txt.getText();
       
//        String city = String.valueOf(CityComboBox1.getSelectedItem());
//        String comm = String.valueOf(CommunityComboBox3.getSelectedItem());
//        String house = String.valueOf(HouseComboBox1.getSelectedItem());
//        String email = emailid_tf.getText();
        
        
        
        
//        personList.addNewDetails(pn);
        
        JOptionPane.showMessageDialog(null, "Doctor Details Saved Successfully");
   

//        JOptionPane.showMessageDialog(this, "Employee Details Updated");


        DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table.getModel();
        Doctor selectedDoctors =(Doctor) model.getValueAt(selectedRowIndex, 0);

        selectedDoctors.setDoc_name(username);
        selectedDoctors.setCity(city);
        selectedDoctors.setDoc_id(Doc_ID);
        selectedDoctors.setCommunity(comm);
        selectedDoctors.setSpeciality(spec);
     

        
        
        
        
        

        populateDocdirectory();
    }//GEN-LAST:event_Doc_save_btnActionPerformed

    private void btn_Self_DetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Self_DetailsActionPerformed
        // TODO add your handling code here:
        populatePatdirectory();
        Self_Details_Pat_new.setVisible(true);
        SplitPane.setRightComponent(Self_Details_Pat_new);
        Doctor_Directory_Panel_new.setVisible(false);
//        SplitPane.setRightComponent(Doctor_Directory_Panel);
        CityCommHouse_new.setVisible(false);
        Option_Panel_Doctor.setVisible(false);
        Hospital_CRUD_new.setVisible(false);
        Encounter_Panel_new.setVisible(false);
        
        
    }//GEN-LAST:event_btn_Self_DetailsActionPerformed

    private void btn_Hospital_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Hospital_SearchActionPerformed
        // TODO add your handling code here:
        populateDoc2directory();
        populateHosp2directory();
        PatView_Hosp_Panel_new.setVisible(true);
        
        SplitPane.setRightComponent(PatView_Hosp_Panel_new);
        Self_Details_Pat_new.setVisible(false);
        CreatePerson_new.setVisible(false);
        Doctor_Directory_Panel_new.setVisible(false);
//        SplitPane.setRightComponent(Doctor_Directory_Panel);
        CityCommHouse_new.setVisible(false);
        Option_Panel_Doctor.setVisible(false);
        Hospital_CRUD_new.setVisible(false);
        Encounter_Panel_new.setVisible(false);
    }//GEN-LAST:event_btn_Hospital_SearchActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String query = txtSearch.getText();
        filter(query);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void pat_directory_btn12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pat_directory_btn12ActionPerformed
        // TODO add your handling code here:
                Option_Panel_Patient_new.setVisible(true);
                SplitPane.setRightComponent(Option_Panel_Patient_new);
                Option_Panel_Doctor.setVisible(false);
                Hospital_CRUD_new.setVisible(false);
                Encounter_Panel_new.setVisible(false);
                CreatePerson_new.setVisible(false);
                Doctor_Directory_Panel_new.setVisible(false);
               
        
    }//GEN-LAST:event_pat_directory_btn12ActionPerformed

    private void btnbackCommActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackCommActionPerformed
        // TODO add your handling code here:
        
      
                    Option_Panel_Admin_new.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin_new);
                    Option_Panel_Doctor.setVisible(false);
                    Encounter_Panel_new.setVisible(false);
                     btnCityCommAdd.setVisible(true);
    }//GEN-LAST:event_btnbackCommActionPerformed

    private void btnback_button_hospitalcrudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnback_button_hospitalcrudActionPerformed
        // TODO add your handling code here:
                    btnCityCommAdd.setVisible(false);
                    Option_Panel_Admin_new.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin_new);
                    Option_Panel_Doctor.setVisible(false); 
                    Encounter_Panel_new.setVisible(false);
    }//GEN-LAST:event_btnback_button_hospitalcrudActionPerformed

    private void CityCBox_HospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityCBox_HospActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityCBox_HospActionPerformed

    private void btnPatHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatHistoryActionPerformed
        // TODO add your handling code here:
        populatePatdirectoryDoc();
        
    }//GEN-LAST:event_btnPatHistoryActionPerformed

    private void btnbackencounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackencounterActionPerformed
        // TODO add your handling code here:
//        btnAddCityCommunity.setVisible(false);
                    Option_Panel_Doctor.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Doctor);
                    
                    
                    Encounter_Panel_new.setVisible(false);
        
    }//GEN-LAST:event_btnbackencounterActionPerformed

    private void Save_Enc_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_Enc_btn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Save_Enc_btn1ActionPerformed

    private void heartRate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartRate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heartRate1ActionPerformed

    private void Temp_tf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Temp_tf1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Temp_tf1ActionPerformed

    private void btnbackencounter1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackencounter1ActionPerformed
        // TODO add your handling code here:
        Option_Panel_Doctor.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Doctor);
                    
                    
                    RUD_Enc_panel_new.setVisible(false);
        
    }//GEN-LAST:event_btnbackencounter1ActionPerformed

    private void txtBPEncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBPEncActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBPEncActionPerformed

    private void btnDeleteEncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEncActionPerformed
        // TODO add your handling code here:
//        Per_Update_Save_Btn.setVisible(true);
        int selectedRowIndex = tblEnc1.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblEnc1.getModel();
        
        VitalSigns selectedVitals = (VitalSigns) model.getValueAt(selectedRowIndex, 0);
        
        EncList.deleteEncounter(selectedVitals);
       
        
        populatEncounter2directory();
        
        

        
        per_username_tf1.setText("");
        perPass_tf1.setText("");
        per_id_tf1.setText("");
        role_tf.setText("");
        gender_tf.setText("");
        emailid_tf1.setText("");
        city_tf.setText("");
        comm_tf.setText("");
        house_tf.setText("");
    }//GEN-LAST:event_btnDeleteEncActionPerformed

    private void btnViewEncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEncActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEnc1.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblEnc1.getModel();
        
        VitalSigns selectedPersonDetails = (VitalSigns) model.getValueAt(selectedRowIndex, 0);
        
        
        txtDocIdEnc.setText(String.valueOf(selectedPersonDetails.getDoc_id()));
        doc_name_tf2.setText(selectedPersonDetails.getDoc_name());
        txtPatIdEnc.setText(String.valueOf(selectedPersonDetails.getPat_id()));
        Patient_Name_tf1.setText(String.valueOf(selectedPersonDetails.getPatient_name()));
        Patient_Age_tf1.setText(String.valueOf(selectedPersonDetails.getAge()));
        txtBPEnc.setText(String.valueOf(selectedPersonDetails.getBP()));
        Temp_tf1.setText(String.valueOf(selectedPersonDetails.getTemp()));
        heartRate1.setText(String.valueOf(selectedPersonDetails.getHeartRate()));
        calStartDateEnc.setDate(selectedPersonDetails.getStart_date());
        
        txtDocIdEnc.setEditable(false);
        doc_name_tf2.setEditable(false);
        txtPatIdEnc.setEditable(false);
        Patient_Name_tf1.setEditable(false);
        Patient_Age_tf1.setEditable(false);
        txtBPEnc.setEditable(false);
        Temp_tf1.setEditable(false);
        heartRate1.setEditable(false);
//        StartDate1.setEditable(false);

        
    }//GEN-LAST:event_btnViewEncActionPerformed

    private void btnViewDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDocActionPerformed
        // TODO add your handling code here:
        int selectedRowDocIndex = Doc_Dir_Table2.getSelectedRow();
        if(selectedRowDocIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        DefaultTableModel modeldoc = (DefaultTableModel) Doc_Dir_Table2.getModel();
        Doctor selectedDocs =(Doctor) modeldoc.getValueAt(selectedRowDocIndex, 0);
        
        doc_id_tf.setText(String.valueOf(selectedDocs.getDoc_id()));
        doc_name_tf1.setText(selectedDocs.getDoc_name());
        
        
    }//GEN-LAST:event_btnViewDocActionPerformed

    private void btnViewPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatActionPerformed
        // TODO add your handling code here:
        int selectedRowPatIndex = tblpatienthistory_dp1.getSelectedRow();
        if(selectedRowPatIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        DefaultTableModel modelpat = (DefaultTableModel) tblpatienthistory_dp1.getModel();
        Patient_Details selectedPats =(Patient_Details) modelpat.getValueAt(selectedRowPatIndex, 0);
        
        pat_id_tf.setText(String.valueOf(selectedPats.getPat_id()));
        Patient_Name_tf.setText(selectedPats.getPatient_name());
        Patient_Age_tf.setText(String.valueOf(selectedPats.getAge()));
    }//GEN-LAST:event_btnViewPatActionPerformed

    private void btnBackDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackDetailsActionPerformed
        // TODO add your handling code here:
        Option_Panel_Patient_new.setVisible(true);
        SplitPane.setRightComponent(Option_Panel_Patient_new);
        Self_Details_Pat_new.setVisible(false);
    }//GEN-LAST:event_btnBackDetailsActionPerformed

    private void btnUpdateEncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateEncActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateEncActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    private void populatePatdirectory() {
        DefaultTableModel model = (DefaultTableModel) tblPat_self.getModel();
        model.setRowCount(0);
        
        for ( VitalSigns ed : EncList.getHistory()){
            if(ed.getPat_id()==glb_pat_id){
            
            
            Object[] row = new Object[4];
            
            row[0]= ed;
            row[1]= ed.getPatient_name();
            row[2]= ed.getDoc_id();
            row[3]= ed.getDoc_name();
            
            model.addRow(row);}
            
            
        }}
    
      private void populatePatdirectoryDoc() {
        DefaultTableModel model = (DefaultTableModel) tblpat_hist_doc.getModel();
        model.setRowCount(0);
        
        for ( Patient_Details pd : pat_history.getHistory()){
            
            
            
            Object[] row = new Object[4];
            
            row[0]= pd;
            row[1]= pd.getPatient_name();
            row[2]= pd.getCity();
            row[3]= pd.getAge();
            
            model.addRow(row);}
            
            
        }
      
    private void populatEncounter2directory() {
        DefaultTableModel model = (DefaultTableModel) tblEnc1.getModel();
        model.setRowCount(0);
        
        for ( VitalSigns ed : EncList.getHistory()){
            
            
            Object[] row = new Object[5];
            
            row[0]= ed;
            row[1]= ed.getPatient_name();
            row[4]= ed.getStart_date();
            row[3]= ed.getDoc_name();
            row[2]= ed.getDoc_id();
            
            
            model.addRow(row);
            
        }}  
    private void populatEncounterdirectory() {
        DefaultTableModel model = (DefaultTableModel) tblEncPat.getModel();
        model.setRowCount(0);
        
        for ( VitalSigns ed : EncList.getHistory()){
            
            
            Object[] row = new Object[5];
            
            row[0]= ed;
            row[1]= ed.getPatient_name();
            row[4]= ed.getStart_date();
            row[3]= ed.getDoc_name();
            row[2]= ed.getDoc_id();
            
            
            model.addRow(row);
            
        }}
    private void populatePersondirectory() {
        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel();
        model.setRowCount(0);
        
        for ( Person ed : personList.getHistory()){
            
            
            Object[] row = new Object[4];
            
            row[0]= ed;
            row[2]= ed.getUserName();
            row[1]= ed.getRole();
            row[3]= ed.getCity();
            
            model.addRow(row);
            
        }}
    
    private void populateHospdirectory() {
        DefaultTableModel model = (DefaultTableModel) HospTbl.getModel();
        model.setRowCount(0);
        
        for ( Hospital ed : HospitalList.getHistory()){
            
            
            Object[] row = new Object[4];
            
            row[0]= ed;
            row[1]= ed.getCity();
            row[2]= ed.getComm();
//            row[3]= ed.getHeartRate();
            
            model.addRow(row);
            
        }}
    private void populateHosp2directory() {
        DefaultTableModel model = (DefaultTableModel) HospTbl1.getModel();
        model.setRowCount(0);
        
        for ( Hospital ed : HospitalList.getHistory()){
            
            
            Object[] row = new Object[4];
            
            row[0]= ed;
            row[1]= ed.getCity();
            row[2]= ed.getComm();
//            row[3]= ed.getHeartRate();
            
            model.addRow(row);
            
        }}
    private void populateDocdirectory() {
        DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table.getModel();
        model.setRowCount(0);
        
        for ( Doctor ed : DoctorList.getHistory()){
            
            
            Object[] row = new Object[5];
            
            row[0]= ed;
            row[1]= ed.getDoc_name();
            row[2]= ed.getAge();
            row[3]= ed.getCity();
            row[4]= ed.getCommunity();
//            row[3]= ed.getHeartRate();
            
            model.addRow(row);
            
        }}
    private void populateDoc2directory() {
        DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table1.getModel();
        model.setRowCount(0);
        
        for ( Doctor ed : DoctorList.getHistory()){
            
            
            Object[] row = new Object[5];
            
            row[0]= ed;
            row[1]= ed.getDoc_name();
            row[2]= ed.getCity();
            row[3]= ed.getCommunity();
            row[4]= ed.getCommunity();
//            row[3]= ed.getHeartRate();
            
            model.addRow(row);
            
        }}
    private void filter(String query){
        
        DefaultTableModel dm;
        dm= (DefaultTableModel) HospTbl1.getModel();
        TableRowSorter<DefaultTableModel> tr= new TableRowSorter<DefaultTableModel>(dm);
        HospTbl1.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(query));
        
        
        DefaultTableModel dm2;
        dm2= (DefaultTableModel) Doc_Dir_Table1.getModel();
        TableRowSorter<DefaultTableModel> tr2= new TableRowSorter<DefaultTableModel>(dm2);
        Doc_Dir_Table1.setRowSorter(tr2);
        
        tr2.setRowFilter(RowFilter.regexFilter(query));
      
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextField BP_tf;
    private javax.swing.JButton Back_Btn;
    private javax.swing.JButton Back_Btn1;
    private javax.swing.JButton BtnMainLogin;
    private javax.swing.JComboBox<String> CityCBox_Hosp;
    private javax.swing.JComboBox<String> CityComboBox;
    private javax.swing.JPanel CityCommHouse_new;
    private javax.swing.JTextField City_tf;
    private javax.swing.JComboBox<String> CommCbox_Hosp;
    private javax.swing.JComboBox<String> CommunityComboBox2;
    private javax.swing.JTextField Community_tf;
    private javax.swing.JPanel ControlPanel;
    private javax.swing.JPanel CreatePerson_new;
    private javax.swing.JButton Del_Hosp_btn;
    private javax.swing.JButton Doc_Delete_btn;
    private javax.swing.JTable Doc_Dir_Table;
    private javax.swing.JTable Doc_Dir_Table1;
    private javax.swing.JTable Doc_Dir_Table2;
    private javax.swing.JTextField Doc_Id_txt;
    private javax.swing.JButton Doc_View_btn;
    private javax.swing.JButton Doc_save_btn;
    private javax.swing.JButton Doc_update_btn;
    private javax.swing.JPanel Doctor_Directory_Panel_new;
    private javax.swing.JPanel Encounter_Panel_new;
    private javax.swing.JComboBox<String> GenderComboBox;
    private javax.swing.JTextField HospNametf;
    private javax.swing.JTable HospTbl;
    private javax.swing.JTable HospTbl1;
    private javax.swing.JPanel Hospital_CRUD_new;
    private javax.swing.JComboBox<String> HouseComboBox;
    private javax.swing.JButton Login;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JPanel Option_Panel_Admin_new;
    private javax.swing.JPanel Option_Panel_Doctor;
    private javax.swing.JPanel Option_Panel_Patient_new;
    private javax.swing.JPanel PatView_Hosp_Panel_new;
    private java.awt.TextField Patient_Age_tf;
    private java.awt.TextField Patient_Age_tf1;
    private java.awt.TextField Patient_Name_tf;
    private java.awt.TextField Patient_Name_tf1;
    private javax.swing.JButton Per_Delete;
    private javax.swing.JPanel Per_RUD_Panel_new;
    private javax.swing.JButton Per_Save_Btn;
    private javax.swing.JButton Per_Update;
    private javax.swing.JButton Per_Update_Save_Btn;
    private javax.swing.JButton Per_View;
    private javax.swing.JTable PersonTbl;
    private javax.swing.JPanel RUD_Enc_panel_new;
    private javax.swing.JButton SaveHospbtn;
    private javax.swing.JButton SaveUpdHospbtn1;
    private javax.swing.JButton Save_Enc_btn;
    private javax.swing.JButton Save_Enc_btn1;
    private javax.swing.JPanel Self_Details_Pat_new;
    private javax.swing.JSplitPane SplitPane;
    private com.toedter.calendar.JDateChooser StartDate;
    private java.awt.TextField Temp_tf;
    private java.awt.TextField Temp_tf1;
    private javax.swing.JButton Update_hosp_btn;
    private javax.swing.JPanel Workarea;
    private javax.swing.JTextField age_tf;
    private javax.swing.JButton btnAddPerson;
    private javax.swing.JButton btnBackDetails;
    private javax.swing.JButton btnBackHospPanel;
    private javax.swing.JButton btnCityCommAdd;
    private javax.swing.JButton btnCommSave;
    private javax.swing.JButton btnDeleteEnc;
    private javax.swing.JButton btnDocDir;
    private javax.swing.JButton btnDoc_Panel_Encounter;
    private javax.swing.JButton btnEnctrHist;
    private javax.swing.JButton btnEnctrOpt;
    private javax.swing.JButton btnMainSave;
    private javax.swing.JButton btnPatDir;
    private javax.swing.JButton btnPatHistory;
    private javax.swing.JButton btnUpdateEnc;
    private javax.swing.JButton btnVUD;
    private javax.swing.JButton btnViewDoc;
    private javax.swing.JButton btnViewEnc;
    private javax.swing.JButton btnViewPat;
    private javax.swing.JButton btn_Hosp_op;
    private javax.swing.JButton btn_Hospital_Search;
    private javax.swing.JButton btn_Self_Details;
    private javax.swing.JButton btnbackComm;
    private javax.swing.JButton btnback_button_hospitalcrud;
    private javax.swing.JButton btnbackencounter;
    private javax.swing.JButton btnbackencounter1;
    private javax.swing.JComboBox<String> cBoxRole;
    private javax.swing.JComboBox<String> cBoxRoleCombo;
    private com.toedter.calendar.JDateChooser calStartDateEnc;
    private javax.swing.JLabel city_lbl;
    private java.awt.TextField city_tf;
    private javax.swing.JTextField city_txt;
    private javax.swing.JLabel comm_lbl;
    private java.awt.TextField comm_tf;
    private javax.swing.JTextField comm_txt;
    private javax.swing.JLabel doc_id_lbl;
    private java.awt.TextField doc_id_tf;
    private java.awt.TextField doc_name_tf1;
    private java.awt.TextField doc_name_tf2;
    private java.awt.TextField emailid_tf;
    private java.awt.TextField emailid_tf1;
    private java.awt.TextField gender_tf;
    private java.awt.TextField heartRate;
    private java.awt.TextField heartRate1;
    private java.awt.TextField house_tf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private java.awt.Label label1;
    private javax.swing.JLabel lblAddPErson;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCityCRUd;
    private javax.swing.JLabel lblCityComm;
    private javax.swing.JLabel lblComm;
    private javax.swing.JLabel lblCommCRUD;
    private javax.swing.JLabel lblCommCity;
    private javax.swing.JLabel lblDocIdEnc;
    private javax.swing.JLabel lblDocList;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblGenderCRUD;
    private javax.swing.JLabel lblHospList;
    private javax.swing.JLabel lblHouse;
    private javax.swing.JLabel lblHouseCRUD;
    private javax.swing.JLabel lblHouseCity;
    private javax.swing.JTextField lblHouseComm;
    private javax.swing.JLabel lblPassCRUD;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPatNameEnc;
    private javax.swing.JLabel lblPersonCRUD;
    private javax.swing.JLabel lblPersonID;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblRoleCRUD;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblSelfEncDetails;
    private javax.swing.JLabel lblSpeciality;
    private javax.swing.JLabel lblUSername;
    private javax.swing.JLabel lblUSernameCRUD;
    private javax.swing.JLabel lblemailId;
    private javax.swing.JButton pat_directory_btn12;
    private java.awt.TextField pat_id_tf;
    private javax.swing.JPasswordField perPass_tf1;
    private java.awt.TextField per_id_tf1;
    private java.awt.TextField per_username_tf1;
    private javax.swing.JPasswordField pswdPasswordMain;
    private javax.swing.JPasswordField pswdPasswordPerson;
    private java.awt.TextField role_tf;
    private javax.swing.JLabel spec_lbl;
    private javax.swing.JTextField spec_txt;
    private javax.swing.JTable tblEnc1;
    private javax.swing.JTable tblEncPat;
    private javax.swing.JTable tblPat_self;
    private javax.swing.JTable tblpat_hist_doc;
    private javax.swing.JTable tblpatienthistory_dp1;
    private java.awt.TextField txtBPEnc;
    private java.awt.TextField txtDocIdEnc;
    private java.awt.TextField txtPatIdEnc;
    private java.awt.TextField txtPersonId;
    private java.awt.TextField txtPersonName;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSpeciality;
    private javax.swing.JTextField txtUserNameMain;
    private javax.swing.JLabel user_lbl;
    private javax.swing.JTextField usr_txt;
    // End of variables declaration//GEN-END:variables
}
