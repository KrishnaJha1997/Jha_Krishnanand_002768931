/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package medical_rescource_system.ui;


import java.awt.List;
//import static java.lang.foreign.MemorySession.global;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;

import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

//import medical_rescource_system.City_List;
import medical_rescource_system.Credentials_list;
import medical_rescource_system.Doctor;
import medical_rescource_system.Doctor_Directory;
import medical_rescource_system.EncounterHistory;
import medical_rescource_system.Hospital;
import medical_rescource_system.Hospital_List;
import medical_rescource_system.Patient_Details;
import medical_rescource_system.Patient_Directory;
import medical_rescource_system.Person;
import medical_rescource_system.PersonDirectory;
import medical_rescource_system.VitalSigns;




/**
 *
 * @author Krishna
 */
public class MainJFrame extends javax.swing.JFrame {
    
    Patient_Directory pat_history;
    PersonDirectory personList;
    Hospital_List HospitalList;
    Doctor_Directory DoctorList;
    EncounterHistory EncList;
    int glb_pat_id;
    
//    City_List cityList;
    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
//        history=new Credentials_list();
        pat_history = new Patient_Directory();
        personList =new PersonDirectory();
        HospitalList =new Hospital_List();
        DoctorList = new Doctor_Directory();
        EncList=new EncounterHistory();
        
//        doc_history = new doc_history();
//        cityList =new City_List();
        
//        this.pat_history=pat_history;
        Encounter_Panel.setVisible(false);
        Option_Panel_Doc.setVisible(false);
        Option_Panel_Admin.setVisible(false);
        Workarea.setVisible(true);
        SplitPane.setRightComponent(Workarea);
        Login2Panel.setVisible(false);
        tblEnc.setVisible(false);
        Doc_save_btn.setVisible(false);

        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SplitPane = new javax.swing.JSplitPane();
        ControlPanel = new javax.swing.JPanel();
        Login = new javax.swing.JButton();
        Workarea = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Login2Panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        BtnLogin = new javax.swing.JButton();
        BtnSave = new javax.swing.JButton();
        roleBox = new javax.swing.JComboBox<>();
        userNameTxtFld = new javax.swing.JTextField();
        passwordTxtFld = new javax.swing.JPasswordField();
        Option_Panel_Doc = new javax.swing.JPanel();
        btnEncounter = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnEncHist = new javax.swing.JButton();
        btnPatDir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEnc = new javax.swing.JTable();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblpatienthistory_dp = new javax.swing.JTable();
        Encounter_Panel = new javax.swing.JPanel();
        BP_tf = new java.awt.TextField();
        jLabel56 = new javax.swing.JLabel();
        Patient_Age_tf = new java.awt.TextField();
        jLabel57 = new javax.swing.JLabel();
        heartRate = new java.awt.TextField();
        jLabel58 = new javax.swing.JLabel();
        Temp_tf = new java.awt.TextField();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        doc_id_tf = new java.awt.TextField();
        Patient_Name_tf = new java.awt.TextField();
        Save_Enc_btn = new javax.swing.JButton();
        jLabel65 = new javax.swing.JLabel();
        doc_name_tf1 = new java.awt.TextField();
        jLabel66 = new javax.swing.JLabel();
        pat_id_tf = new java.awt.TextField();
        StartDate = new com.toedter.calendar.JDateChooser();
        jLabel64 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        Doc_Dir_Table2 = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        tblpatienthistory_dp1 = new javax.swing.JTable();
        btnbackencounter = new javax.swing.JButton();
        Option_Panel_Admin = new javax.swing.JPanel();
        btnAddCityCommunity = new javax.swing.JButton();
        Hosp_op_btn = new javax.swing.JButton();
        btnUpdateUser = new javax.swing.JButton();
        btnAddUser1 = new javax.swing.JButton();
        Encounter_option_btn = new javax.swing.JButton();
        doc_directory_btn = new javax.swing.JButton();
        pat_directory_btn = new javax.swing.JButton();
        CreatePerson = new javax.swing.JPanel();
        per_username_tf = new java.awt.TextField();
        emailid_tf = new java.awt.TextField();
        jLabel68 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        per_id_tf = new java.awt.TextField();
        jLabel74 = new javax.swing.JLabel();
        Per_Save_Btn = new javax.swing.JButton();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        GenderComboBox = new javax.swing.JComboBox<>();
        RoleComboBox = new javax.swing.JComboBox<>();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        CityComboBox = new javax.swing.JComboBox<>();
        CommunityComboBox2 = new javax.swing.JComboBox<>();
        HouseComboBox = new javax.swing.JComboBox<>();
        perPass_tf = new javax.swing.JPasswordField();
        Back_Btn1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        speciality = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        age_tf = new javax.swing.JTextField();
        CityCommHouse = new javax.swing.JPanel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        Comm_Save_Btn = new javax.swing.JButton();
        Community_tf = new javax.swing.JTextField();
        House_tf = new javax.swing.JTextField();
        City_tf = new javax.swing.JTextField();
        btnback_button_cch = new javax.swing.JButton();
        Per_RUD_Panel = new javax.swing.JPanel();
        jLabel84 = new javax.swing.JLabel();
        per_username_tf1 = new java.awt.TextField();
        emailid_tf1 = new java.awt.TextField();
        jLabel69 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        per_id_tf1 = new java.awt.TextField();
        jLabel89 = new javax.swing.JLabel();
        Per_Update_Save_Btn = new javax.swing.JButton();
        jLabel90 = new javax.swing.JLabel();
        perPass_tf1 = new javax.swing.JPasswordField();
        jLabel91 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        PersonTbl = new javax.swing.JTable();
        Per_View = new javax.swing.JButton();
        Per_Update = new javax.swing.JButton();
        Per_Delete = new javax.swing.JButton();
        role_tf = new java.awt.TextField();
        gender_tf = new java.awt.TextField();
        city_tf = new java.awt.TextField();
        comm_tf = new java.awt.TextField();
        house_tf = new java.awt.TextField();
        Back_Btn = new javax.swing.JButton();
        Hospital_CRUD = new javax.swing.JPanel();
        HospNametf = new javax.swing.JTextField();
        CityCBox_Hosp = new javax.swing.JComboBox<>();
        CommCbox_Hosp = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        SaveHospbtn = new javax.swing.JButton();
        label1 = new java.awt.Label();
        jScrollPane5 = new javax.swing.JScrollPane();
        HospTbl = new javax.swing.JTable();
        Update_hosp_btn = new javax.swing.JButton();
        Del_Hosp_btn = new javax.swing.JButton();
        SaveUpdHospbtn1 = new javax.swing.JButton();
        btnback_button_hospitalcrud = new javax.swing.JButton();
        Doctor_Directory_Panel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Doc_Dir_Table = new javax.swing.JTable();
        Doc_View_btn = new javax.swing.JButton();
        Doc_update_btn = new javax.swing.JButton();
        Doc_Delete_btn = new javax.swing.JButton();
        doc_id_lbl = new javax.swing.JLabel();
        user_lbl = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        city_lbl = new javax.swing.JLabel();
        comm_lbl = new javax.swing.JLabel();
        spec_lbl = new javax.swing.JLabel();
        Doc_Id_txt = new javax.swing.JTextField();
        usr_txt = new javax.swing.JTextField();
        city_txt = new javax.swing.JTextField();
        comm_txt = new javax.swing.JTextField();
        spec_txt = new javax.swing.JTextField();
        Doc_save_btn = new javax.swing.JButton();
        Option_Panel_Patient = new javax.swing.JPanel();
        Self_details_pat_btn = new javax.swing.JButton();
        Hosp_Search_pat_btn = new javax.swing.JButton();
        Self_Details_Pat = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblPat_self = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        PatView_Hosp_Panel = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        HospTbl1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        Doc_Dir_Table1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        ControlPanel.setBackground(new java.awt.Color(102, 102, 102));

        Login.setText("Home");
        Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ControlPanelLayout = new javax.swing.GroupLayout(ControlPanel);
        ControlPanel.setLayout(ControlPanelLayout);
        ControlPanelLayout.setHorizontalGroup(
            ControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Login)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ControlPanelLayout.setVerticalGroup(
            ControlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ControlPanelLayout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addComponent(Login)
                .addContainerGap(530, Short.MAX_VALUE))
        );

        SplitPane.setLeftComponent(ControlPanel);

        Workarea.setBackground(new java.awt.Color(255, 204, 51));
        Workarea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Workarea.setMaximumSize(new java.awt.Dimension(600, 600));
        Workarea.setMinimumSize(new java.awt.Dimension(600, 600));
        Workarea.setName(""); // NOI18N
        Workarea.setPreferredSize(new java.awt.Dimension(600, 600));

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Welcome to Medical Recource Center");

        javax.swing.GroupLayout WorkareaLayout = new javax.swing.GroupLayout(Workarea);
        Workarea.setLayout(WorkareaLayout);
        WorkareaLayout.setHorizontalGroup(
            WorkareaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WorkareaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        WorkareaLayout.setVerticalGroup(
            WorkareaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WorkareaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111))
        );

        SplitPane.setRightComponent(Workarea);

        Login2Panel.setBackground(new java.awt.Color(255, 204, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("LOGIN");

        BtnLogin.setText("Login");
        BtnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLoginActionPerformed(evt);
            }
        });

        BtnSave.setText("Save");
        BtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSaveActionPerformed(evt);
            }
        });

        roleBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        roleBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor", "Patient", "System Admin", "Community Admin", "Hospital Admin" }));
        roleBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleBoxActionPerformed(evt);
            }
        });

        userNameTxtFld.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        userNameTxtFld.setText("commAdmin");
        userNameTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameTxtFldActionPerformed(evt);
            }
        });

        passwordTxtFld.setText("commAdmin");

        javax.swing.GroupLayout Login2PanelLayout = new javax.swing.GroupLayout(Login2Panel);
        Login2Panel.setLayout(Login2PanelLayout);
        Login2PanelLayout.setHorizontalGroup(
            Login2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Login2PanelLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(Login2PanelLayout.createSequentialGroup()
                .addContainerGap(397, Short.MAX_VALUE)
                .addGroup(Login2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(roleBox, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userNameTxtFld, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordTxtFld, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(0, 391, Short.MAX_VALUE))
            .addGroup(Login2PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnLogin)
                .addGap(40, 40, 40)
                .addComponent(BtnSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Login2PanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {roleBox, userNameTxtFld});

        Login2PanelLayout.setVerticalGroup(
            Login2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Login2PanelLayout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(userNameTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passwordTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roleBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Login2PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnLogin)
                    .addComponent(BtnSave))
                .addContainerGap(356, Short.MAX_VALUE))
        );

        SplitPane.setRightComponent(Login2Panel);

        getContentPane().add(SplitPane, "card2");

        Option_Panel_Doc.setBackground(new java.awt.Color(255, 204, 51));

        btnEncounter.setText("Encounter");
        btnEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterActionPerformed(evt);
            }
        });

        jButton3.setText("Patient History");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnEncHist.setText("Encounter History");
        btnEncHist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncHistActionPerformed(evt);
            }
        });

        btnPatDir.setText("Patient Directory");
        btnPatDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatDirActionPerformed(evt);
            }
        });

        tblEnc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Patient Id", "Patient Name", "Doc Id", "Doc Name", "Time"
            }
        ));
        jScrollPane2.setViewportView(tblEnc);

        tblpatienthistory_dp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Id", "Patient Username", "Patient City", "Patient Age"
            }
        ));
        jScrollPane9.setViewportView(tblpatienthistory_dp);

        javax.swing.GroupLayout Option_Panel_DocLayout = new javax.swing.GroupLayout(Option_Panel_Doc);
        Option_Panel_Doc.setLayout(Option_Panel_DocLayout);
        Option_Panel_DocLayout.setHorizontalGroup(
            Option_Panel_DocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Option_Panel_DocLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(Option_Panel_DocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Option_Panel_DocLayout.createSequentialGroup()
                        .addGroup(Option_Panel_DocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEncHist, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(Option_Panel_DocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Option_Panel_DocLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPatDir, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Option_Panel_DocLayout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(51, 51, 51)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );

        Option_Panel_DocLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnEncHist, btnEncounter, btnPatDir, jButton3});

        Option_Panel_DocLayout.setVerticalGroup(
            Option_Panel_DocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Option_Panel_DocLayout.createSequentialGroup()
                .addGroup(Option_Panel_DocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Option_Panel_DocLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(Option_Panel_DocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPatDir, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Option_Panel_DocLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(Option_Panel_DocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEncHist, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(153, Short.MAX_VALUE))
        );

        Option_Panel_DocLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnEncHist, btnEncounter, btnPatDir, jButton3});

        getContentPane().add(Option_Panel_Doc, "card4");

        Encounter_Panel.setBackground(new java.awt.Color(255, 204, 51));
        Encounter_Panel.setMaximumSize(new java.awt.Dimension(600, 600));
        Encounter_Panel.setMinimumSize(new java.awt.Dimension(600, 600));
        Encounter_Panel.setPreferredSize(new java.awt.Dimension(600, 600));

        BP_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BP_tfActionPerformed(evt);
            }
        });

        jLabel56.setText("Temp");

        jLabel57.setText("Doctor Id:");

        heartRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heartRateActionPerformed(evt);
            }
        });

        jLabel58.setText("Patient Name:");

        Temp_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Temp_tfActionPerformed(evt);
            }
        });

        jLabel59.setText("Patient Age:");

        jLabel60.setText("BP:");

        jLabel62.setText("HeartRate");

        jLabel63.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel63.setText("Doctor's Clinic");

        Save_Enc_btn.setText("SAVE");
        Save_Enc_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_Enc_btnActionPerformed(evt);
            }
        });

        jLabel65.setText("Patient Id:");

        jLabel66.setText("Doctor Name :");

        jLabel64.setText("Date");

        Doc_Dir_Table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doc_ID", "Doc_User_Name", "Doc_City", "Doc_Community"
            }
        ));
        jScrollPane10.setViewportView(Doc_Dir_Table2);

        tblpatienthistory_dp1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Id", "Patient Username", "Patient City", "Patient Age"
            }
        ));
        jScrollPane11.setViewportView(tblpatienthistory_dp1);

        btnbackencounter.setText("BACK");
        btnbackencounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackencounterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Encounter_PanelLayout = new javax.swing.GroupLayout(Encounter_Panel);
        Encounter_Panel.setLayout(Encounter_PanelLayout);
        Encounter_PanelLayout.setHorizontalGroup(
            Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Encounter_PanelLayout.createSequentialGroup()
                .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Encounter_PanelLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(Encounter_PanelLayout.createSequentialGroup()
                                .addComponent(jLabel65)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pat_id_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Encounter_PanelLayout.createSequentialGroup()
                                .addComponent(jLabel57)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(doc_id_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(doc_name_tf1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel63)
                            .addComponent(jLabel66)
                            .addGroup(Encounter_PanelLayout.createSequentialGroup()
                                .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel59)
                                    .addComponent(jLabel58)
                                    .addComponent(jLabel60)
                                    .addComponent(jLabel56)
                                    .addComponent(jLabel62))
                                .addGap(67, 67, 67)
                                .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BP_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Patient_Age_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(heartRate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Temp_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Patient_Name_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Encounter_PanelLayout.createSequentialGroup()
                                .addComponent(jLabel64)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(StartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(Encounter_PanelLayout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(Save_Enc_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnbackencounter)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
                    .addComponent(jScrollPane11))
                .addContainerGap())
        );
        Encounter_PanelLayout.setVerticalGroup(
            Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Encounter_PanelLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel63)
                .addGap(18, 18, 18)
                .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Encounter_PanelLayout.createSequentialGroup()
                        .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doc_id_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(Encounter_PanelLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(doc_name_tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pat_id_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Encounter_PanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Patient_Name_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Patient_Age_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Encounter_PanelLayout.createSequentialGroup()
                                .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BP_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Temp_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(heartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(StartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(Encounter_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Save_Enc_btn)
                                    .addComponent(btnbackencounter)))
                            .addGroup(Encounter_PanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(143, Short.MAX_VALUE))
        );

        getContentPane().add(Encounter_Panel, "card3");

        Option_Panel_Admin.setBackground(new java.awt.Color(255, 204, 51));

        btnAddCityCommunity.setText("Add City Community House");
        btnAddCityCommunity.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAddCityCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCityCommunityActionPerformed(evt);
            }
        });

        Hosp_op_btn.setText("Hospital Operation");
        Hosp_op_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hosp_op_btnActionPerformed(evt);
            }
        });

        btnUpdateUser.setText("  View, Update, Delete User");
        btnUpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserActionPerformed(evt);
            }
        });

        btnAddUser1.setText("Add User");
        btnAddUser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUser1ActionPerformed(evt);
            }
        });

        Encounter_option_btn.setText("Encounter Operations");
        Encounter_option_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Encounter_option_btnActionPerformed(evt);
            }
        });

        doc_directory_btn.setText("Doctor Directory");
        doc_directory_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doc_directory_btnActionPerformed(evt);
            }
        });

        pat_directory_btn.setText("Patient Operations");
        pat_directory_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pat_directory_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Option_Panel_AdminLayout = new javax.swing.GroupLayout(Option_Panel_Admin);
        Option_Panel_Admin.setLayout(Option_Panel_AdminLayout);
        Option_Panel_AdminLayout.setHorizontalGroup(
            Option_Panel_AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Option_Panel_AdminLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(Option_Panel_AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Option_Panel_AdminLayout.createSequentialGroup()
                        .addComponent(doc_directory_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(pat_directory_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddCityCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(279, 279, 279))
                    .addGroup(Option_Panel_AdminLayout.createSequentialGroup()
                        .addGroup(Option_Panel_AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Option_Panel_AdminLayout.createSequentialGroup()
                                .addComponent(Hosp_op_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Encounter_option_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(Option_Panel_AdminLayout.createSequentialGroup()
                                .addComponent(btnAddUser1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                .addComponent(btnUpdateUser, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(667, 667, 667))))
        );
        Option_Panel_AdminLayout.setVerticalGroup(
            Option_Panel_AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Option_Panel_AdminLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(Option_Panel_AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddUser1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateUser, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(Option_Panel_AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hosp_op_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Encounter_option_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(Option_Panel_AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Option_Panel_AdminLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(btnAddCityCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Option_Panel_AdminLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(Option_Panel_AdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(doc_directory_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pat_directory_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(313, Short.MAX_VALUE))
        );

        getContentPane().add(Option_Panel_Admin, "card4");

        CreatePerson.setBackground(new java.awt.Color(255, 204, 51));

        emailid_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailid_tfActionPerformed(evt);
            }
        });

        jLabel68.setText("UserName:");

        jLabel71.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel71.setText("Add Person");

        jLabel72.setText("Person Id:");

        per_id_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                per_id_tfActionPerformed(evt);
            }
        });

        jLabel74.setText("Role:");

        Per_Save_Btn.setText("SAVE");
        Per_Save_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Per_Save_BtnActionPerformed(evt);
            }
        });

        jLabel75.setText("Gender:");

        jLabel76.setText("email address:");

        jLabel77.setText("Password:");

        GenderComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        RoleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor", "Patient", "System Admin", "Community Admin", "Hospital Admin" }));

        jLabel78.setText("City:");

        jLabel79.setText("Community:");

        jLabel80.setText("House:");

        CityComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityComboBoxActionPerformed(evt);
            }
        });

        Back_Btn1.setText("Back");
        Back_Btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_Btn1ActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 153));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Enter Speciality if you are Doctor:");

        speciality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specialityActionPerformed(evt);
            }
        });

        jLabel13.setText("Age");

        javax.swing.GroupLayout CreatePersonLayout = new javax.swing.GroupLayout(CreatePerson);
        CreatePerson.setLayout(CreatePersonLayout);
        CreatePersonLayout.setHorizontalGroup(
            CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreatePersonLayout.createSequentialGroup()
                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreatePersonLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel71)
                            .addComponent(jLabel68)
                            .addGroup(CreatePersonLayout.createSequentialGroup()
                                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel75)
                                    .addComponent(jLabel74)
                                    .addComponent(jLabel76)
                                    .addComponent(jLabel78)
                                    .addComponent(jLabel79)
                                    .addComponent(jLabel80)
                                    .addComponent(jLabel77)
                                    .addComponent(jLabel72)
                                    .addComponent(jLabel13))
                                .addGap(67, 67, 67)
                                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(age_tf)
                                    .addComponent(per_id_tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(per_username_tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(emailid_tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(GenderComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(RoleComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CityComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(CommunityComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(HouseComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(perPass_tf, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(176, 176, 176)
                                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(speciality, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(CreatePersonLayout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(Back_Btn1)
                        .addGap(28, 28, 28)
                        .addComponent(Per_Save_Btn)))
                .addContainerGap(289, Short.MAX_VALUE))
        );
        CreatePersonLayout.setVerticalGroup(
            CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreatePersonLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel71)
                .addGap(18, 18, 18)
                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel72, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(per_id_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(CreatePersonLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(per_username_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(perPass_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CreatePersonLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel77, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreatePersonLayout.createSequentialGroup()
                        .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel74, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RoleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreatePersonLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel75, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GenderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(speciality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailid_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel78, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CityComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel79, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CommunityComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel80, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HouseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(age_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addGroup(CreatePersonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Back_Btn1)
                    .addComponent(Per_Save_Btn))
                .addContainerGap(146, Short.MAX_VALUE))
        );

        getContentPane().add(CreatePerson, "card6");

        CityCommHouse.setBackground(new java.awt.Color(255, 204, 51));

        jLabel81.setText("City:");

        jLabel82.setText("Community:");

        jLabel83.setText("House:");

        Comm_Save_Btn.setText("SAVE");
        Comm_Save_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Comm_Save_BtnActionPerformed(evt);
            }
        });

        Community_tf.setText("Roxbury");

        House_tf.setText("20 Moreland St");

        City_tf.setText("Boston");

        btnback_button_cch.setText("BACK");
        btnback_button_cch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnback_button_cchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CityCommHouseLayout = new javax.swing.GroupLayout(CityCommHouse);
        CityCommHouse.setLayout(CityCommHouseLayout);
        CityCommHouseLayout.setHorizontalGroup(
            CityCommHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CityCommHouseLayout.createSequentialGroup()
                .addGroup(CityCommHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CityCommHouseLayout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addGroup(CityCommHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(CityCommHouseLayout.createSequentialGroup()
                                .addComponent(jLabel83)
                                .addGap(120, 120, 120)
                                .addComponent(House_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                            .addGroup(CityCommHouseLayout.createSequentialGroup()
                                .addGroup(CityCommHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel82)
                                    .addComponent(jLabel81))
                                .addGap(92, 92, 92)
                                .addGroup(CityCommHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(City_tf)
                                    .addComponent(Community_tf, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)))))
                    .addGroup(CityCommHouseLayout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(Comm_Save_Btn)
                        .addGap(32, 32, 32)
                        .addComponent(btnback_button_cch)))
                .addContainerGap(696, Short.MAX_VALUE))
        );
        CityCommHouseLayout.setVerticalGroup(
            CityCommHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CityCommHouseLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(CityCommHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(City_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CityCommHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel82, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Community_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CityCommHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(House_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(CityCommHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Comm_Save_Btn)
                    .addComponent(btnback_button_cch))
                .addContainerGap(371, Short.MAX_VALUE))
        );

        getContentPane().add(CityCommHouse, "card7");

        Per_RUD_Panel.setBackground(new java.awt.Color(255, 204, 51));

        jLabel84.setText("Password:");

        emailid_tf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailid_tf1ActionPerformed(evt);
            }
        });

        jLabel69.setText("UserName:");

        jLabel85.setText("City:");

        jLabel73.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel73.setText("Person Details");

        jLabel86.setText("Community:");

        jLabel87.setText("Person Id:");

        jLabel88.setText("House:");

        per_id_tf1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                per_id_tf1ActionPerformed(evt);
            }
        });

        jLabel89.setText("Role:");

        Per_Update_Save_Btn.setText("SAVE");
        Per_Update_Save_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Per_Update_Save_BtnActionPerformed(evt);
            }
        });

        jLabel90.setText("Gender:");

        jLabel91.setText("email address:");

        PersonTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Person Id", "Role", "UserName", "City"
            }
        ));
        jScrollPane4.setViewportView(PersonTbl);

        Per_View.setText("View");
        Per_View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Per_ViewActionPerformed(evt);
            }
        });

        Per_Update.setText("Update");
        Per_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Per_UpdateActionPerformed(evt);
            }
        });

        Per_Delete.setText("Delete");
        Per_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Per_DeleteActionPerformed(evt);
            }
        });

        role_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                role_tfActionPerformed(evt);
            }
        });

        gender_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gender_tfActionPerformed(evt);
            }
        });

        city_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                city_tfActionPerformed(evt);
            }
        });

        comm_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comm_tfActionPerformed(evt);
            }
        });

        house_tf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                house_tfActionPerformed(evt);
            }
        });

        Back_Btn.setText("Back");
        Back_Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_BtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Per_RUD_PanelLayout = new javax.swing.GroupLayout(Per_RUD_Panel);
        Per_RUD_Panel.setLayout(Per_RUD_PanelLayout);
        Per_RUD_PanelLayout.setHorizontalGroup(
            Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Per_RUD_PanelLayout.createSequentialGroup()
                .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Per_RUD_PanelLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel73)
                            .addComponent(jLabel69)
                            .addGroup(Per_RUD_PanelLayout.createSequentialGroup()
                                .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel90)
                                    .addComponent(jLabel89)
                                    .addComponent(jLabel91)
                                    .addComponent(jLabel85)
                                    .addComponent(jLabel86)
                                    .addComponent(jLabel88)
                                    .addComponent(jLabel84)
                                    .addComponent(jLabel87))
                                .addGap(67, 67, 67)
                                .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(per_id_tf1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(per_username_tf1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(emailid_tf1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(perPass_tf1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                    .addComponent(role_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(gender_tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(city_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comm_tf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(house_tf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(Per_RUD_PanelLayout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Back_Btn)
                            .addComponent(Per_Update_Save_Btn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Per_RUD_PanelLayout.createSequentialGroup()
                        .addComponent(Per_View)
                        .addGap(18, 18, 18)
                        .addComponent(Per_Update)
                        .addGap(18, 18, 18)
                        .addComponent(Per_Delete)
                        .addGap(110, 110, 110)))
                .addGap(78, 78, 78))
        );
        Per_RUD_PanelLayout.setVerticalGroup(
            Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Per_RUD_PanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Per_RUD_PanelLayout.createSequentialGroup()
                        .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Per_RUD_PanelLayout.createSequentialGroup()
                                .addComponent(jLabel73)
                                .addGap(18, 18, 18)
                                .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel87, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(per_id_tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(Per_RUD_PanelLayout.createSequentialGroup()
                                        .addGap(14, 14, 14)
                                        .addComponent(per_username_tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(perPass_tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(Per_RUD_PanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel84, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel89, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(role_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Per_RUD_PanelLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel90, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gender_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel91, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(emailid_tf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Per_View)
                                .addComponent(Per_Update)
                                .addComponent(Per_Delete)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel85, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(city_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel86, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comm_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Per_RUD_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel88, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(house_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Per_Update_Save_Btn)
                .addGap(54, 54, 54)
                .addComponent(Back_Btn)
                .addContainerGap(155, Short.MAX_VALUE))
        );

        getContentPane().add(Per_RUD_Panel, "card8");

        Hospital_CRUD.setBackground(new java.awt.Color(255, 204, 51));

        HospNametf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HospNametfActionPerformed(evt);
            }
        });

        CityCBox_Hosp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityCBox_HospActionPerformed(evt);
            }
        });

        jLabel2.setText("Hospital Name");

        jLabel3.setText("City");

        jLabel4.setText("Community");

        SaveHospbtn.setText("Save");
        SaveHospbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveHospbtnActionPerformed(evt);
            }
        });

        label1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        label1.setText("Hospital Addition, Delete, Update\n");

        HospTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Hospital Name", "City", "Community"
            }
        ));
        jScrollPane5.setViewportView(HospTbl);

        Update_hosp_btn.setText("Update");
        Update_hosp_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_hosp_btnActionPerformed(evt);
            }
        });

        Del_Hosp_btn.setText("Delete");
        Del_Hosp_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Del_Hosp_btnActionPerformed(evt);
            }
        });

        SaveUpdHospbtn1.setText("Save Updated");
        SaveUpdHospbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveUpdHospbtn1ActionPerformed(evt);
            }
        });

        btnback_button_hospitalcrud.setText("Back");
        btnback_button_hospitalcrud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnback_button_hospitalcrudActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Hospital_CRUDLayout = new javax.swing.GroupLayout(Hospital_CRUD);
        Hospital_CRUD.setLayout(Hospital_CRUDLayout);
        Hospital_CRUDLayout.setHorizontalGroup(
            Hospital_CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Hospital_CRUDLayout.createSequentialGroup()
                .addGroup(Hospital_CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Hospital_CRUDLayout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Hospital_CRUDLayout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addGroup(Hospital_CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Hospital_CRUDLayout.createSequentialGroup()
                                .addComponent(SaveHospbtn)
                                .addGap(31, 31, 31)
                                .addComponent(SaveUpdHospbtn1)
                                .addGap(18, 18, 18)
                                .addComponent(Update_hosp_btn)
                                .addGap(18, 18, 18)
                                .addComponent(btnback_button_hospitalcrud))
                            .addGroup(Hospital_CRUDLayout.createSequentialGroup()
                                .addGroup(Hospital_CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(97, 97, 97)
                                .addGroup(Hospital_CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(HospNametf)
                                    .addComponent(CityCBox_Hosp, 0, 117, Short.MAX_VALUE)
                                    .addComponent(CommCbox_Hosp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(Hospital_CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Hospital_CRUDLayout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(Del_Hosp_btn)))
                .addGap(64, 64, 64))
        );
        Hospital_CRUDLayout.setVerticalGroup(
            Hospital_CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Hospital_CRUDLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(Hospital_CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Hospital_CRUDLayout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79)
                        .addGroup(Hospital_CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(HospNametf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(Hospital_CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CityCBox_Hosp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(Hospital_CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CommCbox_Hosp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(Hospital_CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Hospital_CRUDLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Hospital_CRUDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SaveHospbtn)
                            .addComponent(SaveUpdHospbtn1)
                            .addComponent(Update_hosp_btn)
                            .addComponent(btnback_button_hospitalcrud)))
                    .addGroup(Hospital_CRUDLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(Del_Hosp_btn)))
                .addContainerGap(297, Short.MAX_VALUE))
        );

        getContentPane().add(Hospital_CRUD, "card9");

        Doctor_Directory_Panel.setBackground(new java.awt.Color(255, 204, 51));

        Doc_Dir_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doc_ID", "Doc_User_Name", "Doc_City", "Doc_Community"
            }
        ));
        jScrollPane3.setViewportView(Doc_Dir_Table);

        Doc_View_btn.setText("View");
        Doc_View_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Doc_View_btnActionPerformed(evt);
            }
        });

        Doc_update_btn.setText("Update");
        Doc_update_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Doc_update_btnActionPerformed(evt);
            }
        });

        Doc_Delete_btn.setText("Delete");
        Doc_Delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Doc_Delete_btnActionPerformed(evt);
            }
        });

        doc_id_lbl.setText("Doctor ID:");

        user_lbl.setText("User Name:");

        city_lbl.setText("City:");

        comm_lbl.setText("Communtiy:");

        spec_lbl.setText("Speciality:");

        Doc_save_btn.setText("Save");
        Doc_save_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Doc_save_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Doctor_Directory_PanelLayout = new javax.swing.GroupLayout(Doctor_Directory_Panel);
        Doctor_Directory_Panel.setLayout(Doctor_Directory_PanelLayout);
        Doctor_Directory_PanelLayout.setHorizontalGroup(
            Doctor_Directory_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(Doctor_Directory_PanelLayout.createSequentialGroup()
                .addGroup(Doctor_Directory_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Doctor_Directory_PanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(Doctor_Directory_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(doc_id_lbl)
                            .addComponent(user_lbl)
                            .addComponent(comm_lbl)
                            .addComponent(spec_lbl)
                            .addComponent(jLabel11)
                            .addComponent(city_lbl))
                        .addGap(42, 42, 42)
                        .addGroup(Doctor_Directory_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Doctor_Directory_PanelLayout.createSequentialGroup()
                                .addComponent(Doc_View_btn)
                                .addGap(150, 150, 150)
                                .addComponent(Doc_update_btn)
                                .addGap(148, 148, 148)
                                .addComponent(Doc_Delete_btn))
                            .addComponent(Doc_Id_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usr_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(city_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comm_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spec_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Doctor_Directory_PanelLayout.createSequentialGroup()
                        .addGap(428, 428, 428)
                        .addComponent(Doc_save_btn)))
                .addContainerGap(406, Short.MAX_VALUE))
        );
        Doctor_Directory_PanelLayout.setVerticalGroup(
            Doctor_Directory_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Doctor_Directory_PanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(Doctor_Directory_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Doc_View_btn)
                    .addComponent(Doc_update_btn)
                    .addComponent(Doc_Delete_btn))
                .addGap(21, 21, 21)
                .addGroup(Doctor_Directory_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doc_id_lbl)
                    .addComponent(Doc_Id_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Doctor_Directory_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user_lbl)
                    .addComponent(usr_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Doctor_Directory_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spec_lbl)
                    .addComponent(spec_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Doctor_Directory_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(city_lbl)
                    .addComponent(city_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Doctor_Directory_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comm_lbl)
                    .addComponent(comm_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Doc_save_btn)
                .addContainerGap(140, Short.MAX_VALUE))
        );

        getContentPane().add(Doctor_Directory_Panel, "card10");

        Option_Panel_Patient.setBackground(new java.awt.Color(255, 204, 51));

        Self_details_pat_btn.setText("Self Details");
        Self_details_pat_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Self_details_pat_btnActionPerformed(evt);
            }
        });

        Hosp_Search_pat_btn.setText("Hospitals and Doctors Near By");
        Hosp_Search_pat_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hosp_Search_pat_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Option_Panel_PatientLayout = new javax.swing.GroupLayout(Option_Panel_Patient);
        Option_Panel_Patient.setLayout(Option_Panel_PatientLayout);
        Option_Panel_PatientLayout.setHorizontalGroup(
            Option_Panel_PatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Option_Panel_PatientLayout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(Self_details_pat_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102)
                .addComponent(Hosp_Search_pat_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(509, Short.MAX_VALUE))
        );
        Option_Panel_PatientLayout.setVerticalGroup(
            Option_Panel_PatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Option_Panel_PatientLayout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addGroup(Option_Panel_PatientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Self_details_pat_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hosp_Search_pat_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(439, Short.MAX_VALUE))
        );

        getContentPane().add(Option_Panel_Patient, "card11");

        Self_Details_Pat.setBackground(new java.awt.Color(255, 204, 51));

        tblPat_self.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Id", "Patient Name", "Doc Id", "Doc Name"
            }
        ));
        jScrollPane6.setViewportView(tblPat_self);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Self Encounter Details:");

        javax.swing.GroupLayout Self_Details_PatLayout = new javax.swing.GroupLayout(Self_Details_Pat);
        Self_Details_Pat.setLayout(Self_Details_PatLayout);
        Self_Details_PatLayout.setHorizontalGroup(
            Self_Details_PatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Self_Details_PatLayout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addGroup(Self_Details_PatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(346, Short.MAX_VALUE))
        );
        Self_Details_PatLayout.setVerticalGroup(
            Self_Details_PatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Self_Details_PatLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(456, Short.MAX_VALUE))
        );

        getContentPane().add(Self_Details_Pat, "card12");

        PatView_Hosp_Panel.setBackground(new java.awt.Color(255, 204, 51));

        HospTbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Hospital Name", "City", "Community"
            }
        ));
        jScrollPane7.setViewportView(HospTbl1);

        jLabel7.setText("Search By ");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        Doc_Dir_Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Doc_ID", "Doc_User_Name", "Doc_City", "Doc_Community"
            }
        ));
        jScrollPane8.setViewportView(Doc_Dir_Table1);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setText("Hospital List");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("Doctors List");

        javax.swing.GroupLayout PatView_Hosp_PanelLayout = new javax.swing.GroupLayout(PatView_Hosp_Panel);
        PatView_Hosp_Panel.setLayout(PatView_Hosp_PanelLayout);
        PatView_Hosp_PanelLayout.setHorizontalGroup(
            PatView_Hosp_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatView_Hosp_PanelLayout.createSequentialGroup()
                .addGroup(PatView_Hosp_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PatView_Hosp_PanelLayout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jLabel7)
                        .addGap(46, 46, 46)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(PatView_Hosp_PanelLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(PatView_Hosp_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addGroup(PatView_Hosp_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        PatView_Hosp_PanelLayout.setVerticalGroup(
            PatView_Hosp_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PatView_Hosp_PanelLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(PatView_Hosp_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PatView_Hosp_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PatView_Hosp_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(239, Short.MAX_VALUE))
        );

        getContentPane().add(PatView_Hosp_Panel, "card13");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginActionPerformed
//        Login2Panel loginPanel = new Login2Panel(history);
        Login2Panel.setVisible(true);
        
        SplitPane.setRightComponent(Login2Panel);

// TODO add your handling code here:
    }//GEN-LAST:event_LoginActionPerformed

    private void BtnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLoginActionPerformed
        // TODO add your handling code here:

        String id = userNameTxtFld.getText();
        String pass = passwordTxtFld.getText();
        String role = String.valueOf(roleBox.getSelectedItem());
        int check = 0;

        for(Person emp: personList.getHistory()){
            if(emp.getUserName().equals(id) && emp.getRole().equals(role)&& role.equals("Doctor")) {
                Object[] row = new Object[4];
                row[0] = emp;
                row[1] = emp.getPassword();
                if(row[1].equals(pass)){
                    check = 1;
                    JOptionPane.showMessageDialog(null, "Login Successful");
//                    Encounter_Panel.setVisible(true);
                    Option_Panel_Doc.setVisible(true);
                    Option_Panel_Admin.setVisible(false);
                    Encounter_Panel.setVisible(false);
//                    SplitPane.setVisible(false);
                    SplitPane.setRightComponent(Option_Panel_Doc);
                    tblEnc.setVisible(false);
                    break;
                    
                }
            }
            else if(role.equals("System Admin") && emp.getUserName().equals(id) && emp.getRole().equals(role)) {
                
                Object[] row = new Object[4];
                row[0] = emp;
                row[1] = emp.getPassword();
                if(row[1].equals(pass)){
                    check = 1;
                    JOptionPane.showMessageDialog(null, "Login Successfull_"+role);
//                    Encounter_Panel.setVisible(true);
                    btnAddCityCommunity.setVisible(false);
                    Option_Panel_Admin.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin);
                    Option_Panel_Doc.setVisible(false);
                    
                    Encounter_Panel.setVisible(false);
//                    
                    
                    
                    tblEnc.setVisible(false);
                    break;
                }
                
                else{
                    JOptionPane.showMessageDialog(null, "Password Incorrect");
                }
            }
            else if(role.equals("Community Admin") && emp.getUserName().equals(id) && emp.getRole().equals(role)) {
                
                Object[] row = new Object[4];
                row[0] = emp;
                row[1] = emp.getPassword();
                if(row[1].equals(pass)){
                    check = 1;
                    JOptionPane.showMessageDialog(null, "Login Successfull_"+role);
                    btnAddCityCommunity.setVisible(true);
//                    Encounter_Panel.setVisible(true);
                    Option_Panel_Admin.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin);
                    Option_Panel_Doc.setVisible(false);
                    
                    Encounter_Panel.setVisible(false);
//                    ControlPanel.setVisible(true);
//                    SplitPane.setVisible(false);
                    
                    tblEnc.setVisible(false);
                    break;
                }
                
                else{
                    JOptionPane.showMessageDialog(null, "Password Incorrect");
                }
            }
            else if(role.equals("Hospital Admin") && emp.getUserName().equals(id) && emp.getRole().equals(role)) {
                
                Object[] row = new Object[4];
                row[0] = emp;
                row[1] = emp.getPassword();
                if(row[1].equals(pass)){
                    check = 1;
                    JOptionPane.showMessageDialog(null, "Login Successfull_"+role);
                    btnAddCityCommunity.setVisible(true);
//                    Encounter_Panel.setVisible(true);
                    Option_Panel_Admin.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin);
                    Option_Panel_Doc.setVisible(false);
                    
                    Encounter_Panel.setVisible(false);
//                    ControlPanel.setVisible(true);
//                    SplitPane.setVisible(false);
                    
                    tblEnc.setVisible(false);
                    break;
                }
                
                else{
                    JOptionPane.showMessageDialog(null, "Password Incorrect");
                }
            }
            else if(role.equals("Patient") && emp.getUserName().equals(id) && emp.getRole().equals(role)) {
                
                Object[] row = new Object[4];
                row[0] = emp;
                row[1] = emp.getPassword();
                if(row[1].equals(pass)){
                    check = 1;
                    
                    JOptionPane.showMessageDialog(null, "Login Successfull_"+role);
//                    btnAddCityCommunity.setVisible(true);
//                    Encounter_Panel.setVisible(true);
                    Option_Panel_Patient.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Patient);
                    Hospital_CRUD.setVisible(false);
                    Option_Panel_Doc.setVisible(false);
                    Option_Panel_Admin.setVisible(false);
                    CityCommHouse.setVisible(false);
                    Per_RUD_Panel.setVisible(false);
                    glb_pat_id =emp.getId();
                    
                    Encounter_Panel.setVisible(false);
//                    ControlPanel.setVisible(true);
//                    SplitPane.setVisible(false);
                    
                    tblEnc.setVisible(false);
                    break;
                }
                
                else{
                    JOptionPane.showMessageDialog(null, "Password Incorrect");
                }
            }
        }
            if(check == 0)
               
            {
                JOptionPane.showMessageDialog(null, "Check username or Password or role");
            }

            
            
        
    }//GEN-LAST:event_BtnLoginActionPerformed

    private void BtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSaveActionPerformed
        // TODO add your handling code here:
        String username = userNameTxtFld.getText();
        String pass = passwordTxtFld.getText();
        String role = String.valueOf(roleBox.getSelectedItem());

        Person ed = personList.addNewDetails();

        ed.setUserName(username);
        ed.setPassword(pass);
        ed.setRole(role);
        JOptionPane.showMessageDialog(null, "Saved Successfully");
    }//GEN-LAST:event_BtnSaveActionPerformed

    private void roleBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleBoxActionPerformed

    private void userNameTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameTxtFldActionPerformed

    private void Temp_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Temp_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Temp_tfActionPerformed

    private void BP_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BP_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BP_tfActionPerformed

    private void Save_Enc_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_Enc_btnActionPerformed
        int doc_id = Integer.parseInt(doc_id_tf.getText());
        String doc_name= doc_name_tf1.getText();
        int pat_id = Integer.parseInt(pat_id_tf.getText());
        String patient_name = Patient_Name_tf.getText();
        int age = Integer.parseInt(Patient_Age_tf.getText());
        int BP =Integer.parseInt( BP_tf.getText());
        double temp = Integer.parseInt(Temp_tf.getText());
        int HeartRate =Integer.parseInt( heartRate.getText());
        Date start_date = StartDate.getDate();
        
        
        VitalSigns vs = EncList.addNewDetails();

        vs.setDoc_name(doc_name);
        vs.setDoc_id(doc_id);
        vs.setPat_id(pat_id);
        vs.setBP(BP);
        vs.setTemp(temp);
        vs.setHeartRate(HeartRate);
        vs.setPatient_name(patient_name);
        vs.setAge(age);
        vs.setStart_date(start_date);
        
//        ed.setSyst_BP(syst_BP);
//        ed.setDyst_BP(dyst_BP);
//        ed.setHeartRate(HeartRate);
//        ed.setWt(wt);
//        ed.setHt(ht);
//        
        populatEncounterdirectory();
        
//        ed.setEmail_address(email_address);
//        ed.setPosition(position);
//        ed.setImagepath(new ImageIcon(prof_pic));



            JOptionPane.showMessageDialog(this, "Patient Info Added");

        
        
        


// TODO add your handling code here:
    }//GEN-LAST:event_Save_Enc_btnActionPerformed

    private void heartRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heartRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_heartRateActionPerformed

    private void btnEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterActionPerformed
        // TODO add your handling code here:
        populatePatientTable();
        populateDoctorTable();
        Encounter_Panel.setVisible(true);
        SplitPane.setRightComponent(Encounter_Panel);
    }//GEN-LAST:event_btnEncounterActionPerformed
    private void populatePatientTable(){
    
         DefaultTableModel model = (DefaultTableModel) tblpatienthistory_dp1.getModel();
        model.setRowCount(0);
        
        for ( Patient_Details pd : pat_history.getHistory()){
            
            
            
            Object[] row = new Object[4];
            
            row[0]= pd;
            row[1]= pd.getPatient_name();
            row[2]= pd.getCity();
            row[3]= pd.getAge();
            
            model.addRow(row);}     
        
    }
    
    private void populateDoctorTable() {
       DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table2.getModel();
        model.setRowCount(0);
        
        for ( Doctor ed : DoctorList.getHistory()){
            
            
            Object[] row = new Object[4];
            
            row[0]= ed;
            row[1]= ed.getDoc_name();
            row[2]= ed.getAge();
            row[3]= ed.getCity();
//            row[4]= ed.getCommunity();
//            row[3]= ed.getHeartRate();
            
            model.addRow(row);
            
            
        }}
    private void btnPatDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatDirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPatDirActionPerformed

    private void btnEncHistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncHistActionPerformed
        tblEnc.setVisible(true);
//        populatedirectory_2();
//        populatedirectory();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEncHistActionPerformed

    private void btnAddCityCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCityCommunityActionPerformed
                    
                    CityCommHouse.setVisible(true);
                    SplitPane.setRightComponent(CityCommHouse);
                    CreatePerson.setVisible(false);
                    Option_Panel_Doc.setVisible(false);
                    Option_Panel_Admin.setVisible(false);
                    
                    Encounter_Panel.setVisible(false);
        
// TODO add your handling code here:
    }//GEN-LAST:event_btnAddCityCommunityActionPerformed

    private void btnUpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUserActionPerformed
                    Per_RUD_Panel.setVisible(true);
                    SplitPane.setRightComponent(Per_RUD_Panel);
                    CityCommHouse.setVisible(false);
                    CreatePerson.setVisible(false);
                    Option_Panel_Doc.setVisible(false);
                    Option_Panel_Admin.setVisible(false);
                    populatePersondirectory();
                    
                    Encounter_Panel.setVisible(false); // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateUserActionPerformed

    private void emailid_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailid_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailid_tfActionPerformed

    private void Per_Save_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Per_Save_BtnActionPerformed
        int check_2=0;    
        int id = Integer.parseInt(per_id_tf.getText());
            for(Person emp: personList.getHistory()){
                   if(emp.getId()==id) {
                       JOptionPane.showMessageDialog(null, "Person ID already exists");
                       check_2=10;
                       break;
                    }
                   
            }
         
        // VALIDATION FOR THE FIELDS WHICH CAN BE UPDATED
          boolean check ; 
        
//        check = per_id_tf1.getText().matches("^[a-zA-Z]+$");
        String id_2 = per_id_tf.getText();
        check = id_2.matches("^[0-9]+$");
        if(!check) {
            JOptionPane.showMessageDialog(null, "Id must be numeric");
            return;
        }
        

        
        check = per_username_tf.getText().matches("^[a-zA-Z]+$");
        if(check == false) {
            JOptionPane.showMessageDialog(null, "UserName cannot have integer values");
            return;
        }
        check = emailid_tf.getText().matches("^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        
        if(!check) {
            JOptionPane.showMessageDialog(null, "Email Address must be in format of X@Y.Z");
            return;
        }
        
        if (per_username_tf.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter Employee First Name");
        }
        if (perPass_tf.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter Employee Last Name");
        }
       
        if ((emailid_tf.getText().equals("")) ){
            JOptionPane.showMessageDialog(this, "Please enter your Email address ");
         
        }
        
        String age = age_tf.getText();
        check = age.matches("^[0-9]+$");
        if(!check) {
            JOptionPane.showMessageDialog(null, "Age must be numeric");
           
        }
        
        else{
           
        if (check_2==0){    
          
        
        String username = per_username_tf.getText();
        String pass = perPass_tf.getText();
        String role = String.valueOf(RoleComboBox.getSelectedItem());
        String gender = String.valueOf(GenderComboBox.getSelectedItem());
        String email = emailid_tf.getText();
        String city = String.valueOf(CityComboBox.getSelectedItem());
        String comm = String.valueOf(CommunityComboBox2.getSelectedItem());
        String house = String.valueOf(HouseComboBox.getSelectedItem());
        String spl =speciality.getText();
        int age2 = Integer.parseInt(age_tf.getText());
        
        Person pn =  personList.addNewDetails();
//        Person pn = new Person();
        pn.setUserName(username);
        pn.setPassword(pass);
        pn.setId(id);
        pn.setRole(role);
        pn.setEmail(email);
        pn.setGender(gender);
        pn.setCity(city);
        pn.setCommunity(comm);
        pn.setHouse(house);
        pn.setAge(age2);
        
        if(role.equals("Doctor")){
            if (speciality.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter Speciality Last Name");
            return;
        }
        
        Doctor doc =  DoctorList.addNewDetails();
//        Person pn = new Person();
        doc.setDoc_name(username);
        doc.setDoc_id(id);
        doc.setAge(age2);
        doc.setCity(city);
        doc.setCommunity(comm);
        doc.setSpeciality(spl);
        
//        JOptionPane.showMessageDialog(null, "Person Details Saved Successfully as Doctor");
        }
        if(role.equals("Patient")){
        Patient_Details pat =  pat_history.addNewDetails();
//        Person pn = new Person();
        pat.setPat_id(id);
        pat.setPatient_name(username);
        pat.setAge(age2);
        pat.setCity(city);
        pat.setComm(comm);
//        doc.setSpeciality(spl);
        
        
        }
        JOptionPane.showMessageDialog(null, "Person Details Saved Successfully as "+role);
        }
        }
        
  
        
//        personList.addNewDetails(pn);
        
   


        // TODO add your handling code here:
    }//GEN-LAST:event_Per_Save_BtnActionPerformed

    private void per_id_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_per_id_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_per_id_tfActionPerformed

    private void btnAddUser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUser1ActionPerformed
        CreatePerson.setVisible(true);          
        SplitPane.setRightComponent(CreatePerson);
        Option_Panel_Doc.setVisible(false);
        Option_Panel_Admin.setVisible(false);
        Encounter_Panel.setVisible(false); 
    }//GEN-LAST:event_btnAddUser1ActionPerformed

    private void Comm_Save_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Comm_Save_BtnActionPerformed
        String city = City_tf.getText();
        String comm = Community_tf.getText();
        String house = House_tf.getText();
        
        
        CityComboBox.addItem(city);
        CityCBox_Hosp.addItem(city);
        CommunityComboBox2.addItem(comm);
        CommCbox_Hosp.addItem(comm);
        HouseComboBox.addItem(house);

        JOptionPane.showMessageDialog(null, "Community Details Added");
// TODO add your handling code here:
    }//GEN-LAST:event_Comm_Save_BtnActionPerformed

    private void CityComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityComboBoxActionPerformed

    private void emailid_tf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailid_tf1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailid_tf1ActionPerformed

    private void per_id_tf1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_per_id_tf1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_per_id_tf1ActionPerformed

    private void Per_Update_Save_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Per_Update_Save_BtnActionPerformed
        // TODO add your handling code here:
         
        int selectedRowIndex = PersonTbl.getSelectedRow();
 
         
        if(selectedRowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please select a row to update");
                return;

            }
        
        
        // VALIDATION FOR THE FIELDS WHICH CAN BE UPDATED
          boolean check ; 
        
//        check = per_id_tf1.getText().matches("^[a-zA-Z]+$");
        String age_2 = per_id_tf1.getText();
        check = age_2.matches("^[0-9]+$");
        if(!check) {
            JOptionPane.showMessageDialog(null, "Id must be numeric");
            return;
        }
        

        
        check = per_username_tf1.getText().matches("^[a-zA-Z]+$");
        if(check == false) {
            JOptionPane.showMessageDialog(null, "UserName cannot have integer values");
            return;
        }
        check = perPass_tf1.getText().matches("^[a-zA-Z]+$");
        
        
        
        
        check = emailid_tf1.getText().matches("^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[a-zA-Z0-9]+$");
        
        if(!check) {
            JOptionPane.showMessageDialog(null, "Email Address must be in format of X@Y.Z");
            return;
        }
        
        if (per_username_tf1.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter Employee First Name");
        }
        if (perPass_tf1.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please enter Employee Last Name");
        }
       
        if ((emailid_tf1.getText().equals("")) ){
            JOptionPane.showMessageDialog(this, "Please enter your Email address ");
         
        }
        
        else{
        //    SAVE FUNCTIONALITY OF UPDATED FEATURES
         

        String username = per_username_tf1.getText();
        String pass = perPass_tf1.getText();
        int Person_ID = Integer.parseInt(per_id_tf1.getText());  
        String role = String.valueOf(RoleComboBox.getSelectedItem());
        String gender = String.valueOf(GenderComboBox.getSelectedItem());
        String email = emailid_tf.getText();
//        String city = String.valueOf(CityComboBox1.getSelectedItem());
//        String comm = String.valueOf(CommunityComboBox3.getSelectedItem());
//        String house = String.valueOf(HouseComboBox1.getSelectedItem());
//        String email = emailid_tf.getText();
        
        
        
        
//        personList.addNewDetails(pn);
        
        JOptionPane.showMessageDialog(null, "Person Details Saved Successfully");
   

//        JOptionPane.showMessageDialog(this, "Employee Details Updated");


        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel(); 
        Person pn = (Person)model.getValueAt(selectedRowIndex, 0);


//       Person pn =  personList.addNewDetails();
//        Person pn = new Person();
        pn.setUserName(username);
        pn.setPassword(pass);
        pn.setId(Person_ID);
        pn.setRole(role);
        pn.setEmail(email);
        pn.setGender(gender);
//        pn.setCity(city);
//        pn.setCommunity(comm);
//        pn.setHouse(house);
        
        
        
        
        

        populatePersondirectory();
        }
       
    }//GEN-LAST:event_Per_Update_Save_BtnActionPerformed

    private void Per_ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Per_ViewActionPerformed
        Per_Update_Save_Btn.setVisible(false);
        int selectedRowIndex = PersonTbl.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel();
        
        Person selectedPersonDetails = (Person) model.getValueAt(selectedRowIndex, 0);
        
        
        per_username_tf1.setText(selectedPersonDetails.getUserName());
        perPass_tf1.setText(selectedPersonDetails.getPassword());
        per_id_tf1.setText(String.valueOf(selectedPersonDetails.getId()));
        role_tf.setText(String.valueOf(selectedPersonDetails.getRole()));
        gender_tf.setText(String.valueOf(selectedPersonDetails.getGender()));
        emailid_tf1.setText(selectedPersonDetails.getEmail());
        city_tf.setText(selectedPersonDetails.getCity());
        comm_tf.setText(selectedPersonDetails.getCommunity());
        house_tf.setText(selectedPersonDetails.getHouse());
        
        per_username_tf1.setEditable(false);
        perPass_tf1.setEditable(false);
        per_id_tf1.setEditable(false);
        role_tf.setEditable(false);
        gender_tf.setEditable(false);
        emailid_tf1.setEditable(false);
        city_tf.setEditable(false);
        comm_tf.setEditable(false);
        house_tf.setEditable(false);
        
        
        
                // TODO add your handling code here:
    }//GEN-LAST:event_Per_ViewActionPerformed

    private void Per_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Per_UpdateActionPerformed
        // TODO add your handling code here:
        Per_Update_Save_Btn.setVisible(true);
        int selectedRowIndex = PersonTbl.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel();
        
        Person selectedPersonDetails = (Person) model.getValueAt(selectedRowIndex, 0);
        
        
        per_username_tf1.setText(selectedPersonDetails.getUserName());
        perPass_tf1.setText(selectedPersonDetails.getPassword());
        per_id_tf1.setText(String.valueOf(selectedPersonDetails.getId()));
        role_tf.setText(String.valueOf(selectedPersonDetails.getRole()));
        gender_tf.setText(String.valueOf(selectedPersonDetails.getGender()));
        emailid_tf1.setText(selectedPersonDetails.getEmail());
        city_tf.setText(selectedPersonDetails.getCity());
        comm_tf.setText(selectedPersonDetails.getCommunity());
        house_tf.setText(selectedPersonDetails.getHouse());
        
        per_username_tf1.setEditable(true);
        perPass_tf1.setEditable(true);
        per_id_tf1.setEditable(false);
        role_tf.setEditable(false);
        gender_tf.setEditable(false);
        emailid_tf1.setEditable(true);
        city_tf.setEditable(false);
        comm_tf.setEditable(false);
        house_tf.setEditable(false);
    }//GEN-LAST:event_Per_UpdateActionPerformed

    private void Per_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Per_DeleteActionPerformed

        // TODO add your handling code here:
        Per_Update_Save_Btn.setVisible(true);
        int selectedRowIndex = PersonTbl.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel();
        
        Person selectedPersonDetails = (Person) model.getValueAt(selectedRowIndex, 0);
        
        personList.deleteEmployeeDetails(selectedPersonDetails);
       
        
        populatePersondirectory();
        
        per_username_tf1.setText("");
        perPass_tf1.setText("");
        per_id_tf1.setText("");
        role_tf.setText("");
        gender_tf.setText("");
        emailid_tf1.setText("");
        city_tf.setText("");
        comm_tf.setText("");
        house_tf.setText("");
        
        per_username_tf1.setEditable(false);
        perPass_tf1.setEditable(false);
        per_id_tf1.setEditable(false);
        role_tf.setEditable(false);
        gender_tf.setEditable(false);
        emailid_tf1.setEditable(false);
        city_tf.setEditable(false);
        comm_tf.setEditable(false);
        house_tf.setEditable(false);
        
        
    }//GEN-LAST:event_Per_DeleteActionPerformed

    private void role_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_role_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_role_tfActionPerformed

    private void gender_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gender_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gender_tfActionPerformed

    private void city_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_city_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_city_tfActionPerformed

    private void comm_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comm_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comm_tfActionPerformed

    private void house_tfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_house_tfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_house_tfActionPerformed

    private void Back_BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_BtnActionPerformed
        // TODO add your handling code here:
                    btnAddCityCommunity.setVisible(false);
                    Option_Panel_Admin.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin);
                    Option_Panel_Doc.setVisible(false);
                    
                    Encounter_Panel.setVisible(false);
//                  
    }//GEN-LAST:event_Back_BtnActionPerformed

    private void Back_Btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_Btn1ActionPerformed
        // TODO add your handling code here:
                    btnAddCityCommunity.setVisible(false);
                    Option_Panel_Admin.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin);
                    Option_Panel_Doc.setVisible(false);
                    
                    Encounter_Panel.setVisible(false);
//                  
    }//GEN-LAST:event_Back_Btn1ActionPerformed

    private void HospNametfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HospNametfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HospNametfActionPerformed

    private void Hosp_op_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hosp_op_btnActionPerformed
        // TODO add your handling code here:
                    
                    Hospital_CRUD.setVisible(true);
                    SplitPane.setRightComponent(Hospital_CRUD);
                    Option_Panel_Doc.setVisible(false);
                    
                    Encounter_Panel.setVisible(false);
                    SaveUpdHospbtn1.setVisible(false);
    }//GEN-LAST:event_Hosp_op_btnActionPerformed

    private void SaveHospbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveHospbtnActionPerformed
        // TODO add your handling code here:
        if (HospNametf.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Enter Hospital Name");
            return;
        }
        else{
        String hosp_name = HospNametf.getText();
        String city = String.valueOf(CityCBox_Hosp.getSelectedItem());
        String comm = String.valueOf(CommCbox_Hosp.getSelectedItem());
        
         
        Hospital hp =  HospitalList.addNewDetails();
//        Person pn = new Person();
        hp.setCity(city);
        hp.setComm(comm);
        hp.setHosp(hosp_name);
        
        populateHospdirectory();}
        
        
//        String email = emailid_tf.getText();


    }//GEN-LAST:event_SaveHospbtnActionPerformed

    private void Update_hosp_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_hosp_btnActionPerformed
        // TODO add your handling code here:
//        
          
        int selectedRowIndex = HospTbl.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
//        Per_Update_Save_Btn.setVisible(true);
        SaveUpdHospbtn1.setVisible(true);
        SaveHospbtn.setVisible(false);
        DefaultTableModel model = (DefaultTableModel) HospTbl.getModel();
        
        Hospital selectedHospitalDetails = (Hospital) model.getValueAt(selectedRowIndex, 0);
        
        
        HospNametf.setText(selectedHospitalDetails.getHosp());
        CityCBox_Hosp.setEditable(false);
        CommCbox_Hosp.setEditable(false);
        
    }//GEN-LAST:event_Update_hosp_btnActionPerformed

    private void Del_Hosp_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Del_Hosp_btnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = HospTbl.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) HospTbl.getModel();
        Hospital selectedHospitalDetails = (Hospital) model.getValueAt(selectedRowIndex, 0);
        
        HospitalList.deleteEmployeeDetails(selectedHospitalDetails);
       
        
        populateHospdirectory();
        HospNametf.setText("");
 
        
    }//GEN-LAST:event_Del_Hosp_btnActionPerformed

    private void SaveUpdHospbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveUpdHospbtn1ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = HospTbl.getSelectedRow();
         
        if(selectedRowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please select a row to update");
                return;

            }
        
        if (HospNametf.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Enter Hospital Name");
            return;
        }
        else{
        String hosp_name = HospNametf.getText();
        
         
        DefaultTableModel model = (DefaultTableModel) HospTbl.getModel(); 
        Hospital selectedHospitalDetails = (Hospital) model.getValueAt(selectedRowIndex, 0);
        


//       Person pn =  personList.addNewDetails();
//        Person pn = new Person();
        selectedHospitalDetails.setHosp(hosp_name);
        populateHospdirectory();}
        
        
    }//GEN-LAST:event_SaveUpdHospbtn1ActionPerformed

    private void Encounter_option_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Encounter_option_btnActionPerformed
        // TODO add your handling code here:
                    Option_Panel_Doc.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Doc);
                    Hospital_CRUD.setVisible(false);
                    Encounter_Panel.setVisible(false);
                    
                    
                    SaveUpdHospbtn1.setVisible(false);
    }//GEN-LAST:event_Encounter_option_btnActionPerformed

    private void doc_directory_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doc_directory_btnActionPerformed
        // TODO add your handling code here:
        populateDocdirectory();        
        Doctor_Directory_Panel.setVisible(true);
                SplitPane.setRightComponent(Doctor_Directory_Panel);
                Option_Panel_Doc.setVisible(false);
                Hospital_CRUD.setVisible(false);
                Encounter_Panel.setVisible(false);
                CreatePerson.setVisible(false);
                 SaveUpdHospbtn1.setVisible(false);
                    
        
    }//GEN-LAST:event_doc_directory_btnActionPerformed

    private void specialityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specialityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_specialityActionPerformed

    private void Doc_update_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Doc_update_btnActionPerformed
        // TODO add your handling code here:
         Doc_save_btn.setVisible(true);
        int selectedRowIndex = Doc_Dir_Table.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table.getModel();
        
        Doctor selectedDoctors =(Doctor) model.getValueAt(selectedRowIndex, 0);
        
        
        Doc_Id_txt.setText(String.valueOf(selectedDoctors.getDoc_id()));
        usr_txt.setText(selectedDoctors.getDoc_name());
//        pass_txt.setText(String.valueOf(selectedDoctors.get()));
//        gen_txt.setText(String.valueOf(selectedDoctors.g()));
//        mail_txt.setText(String.valueOf(selectedDoctors.get()));
        city_txt.setText(selectedDoctors.getCity());
        comm_txt.setText(selectedDoctors.getCommunity());
        spec_txt.setText(selectedDoctors.getSpeciality());
        
        Doc_Id_txt.setEditable(false);
        usr_txt.setEditable(true);
        city_txt.setEditable(false);
        comm_txt.setEditable(false);
        spec_txt.setEditable(true);
        
    }//GEN-LAST:event_Doc_update_btnActionPerformed

    private void Doc_View_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Doc_View_btnActionPerformed
        // TODO add your handling code here:
        
//        Per_Update_Save_Btn.setVisible(false);
        int selectedRowIndex = Doc_Dir_Table.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table.getModel();
        
        Doctor selectedDoctors =(Doctor) model.getValueAt(selectedRowIndex, 0);
        
        
        Doc_Id_txt.setText(String.valueOf(selectedDoctors.getDoc_id()));
        usr_txt.setText(selectedDoctors.getDoc_name());
//        pass_txt.setText(String.valueOf(selectedDoctors.get()));
//        gen_txt.setText(String.valueOf(selectedDoctors.g()));
//        mail_txt.setText(String.valueOf(selectedDoctors.get()));
        city_txt.setText(selectedDoctors.getCity());
        comm_txt.setText(selectedDoctors.getCommunity());
        spec_txt.setText(selectedDoctors.getSpeciality());
        
        Doc_Id_txt.setEditable(false);
        usr_txt.setEditable(false);
        city_txt.setEditable(false);
        comm_txt.setEditable(false);
        spec_txt.setEditable(false);
     
        
        
    }//GEN-LAST:event_Doc_View_btnActionPerformed

    private void Doc_Delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Doc_Delete_btnActionPerformed
        // TODO add your handling code here:
        
       int selectedRowIndex = Doc_Dir_Table.getSelectedRow();
       if(selectedRowIndex<0){
           JOptionPane.showMessageDialog(this, "Please select a row to delete");
           return;
       }
       
       DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table.getModel();
       Doctor selectedDoctors =(Doctor) model.getValueAt(selectedRowIndex, 0);
       
       DoctorList.deleteDoctors(selectedDoctors);
       populateDocdirectory();
       JOptionPane.showMessageDialog(this, "Doctor Details deleted successfully");
       
       
       
    }//GEN-LAST:event_Doc_Delete_btnActionPerformed

    private void Doc_save_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Doc_save_btnActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = Doc_Dir_Table.getSelectedRow();
        
        int Doc_ID = Integer.parseInt(Doc_Id_txt.getText());  
        String username = usr_txt.getText();
        String city = city_txt.getText();
        String comm = comm_txt.getText();
        String spec = spec_txt.getText();
       
//        String city = String.valueOf(CityComboBox1.getSelectedItem());
//        String comm = String.valueOf(CommunityComboBox3.getSelectedItem());
//        String house = String.valueOf(HouseComboBox1.getSelectedItem());
//        String email = emailid_tf.getText();
        
        
        
        
//        personList.addNewDetails(pn);
        
        JOptionPane.showMessageDialog(null, "Doctor Details Saved Successfully");
   

//        JOptionPane.showMessageDialog(this, "Employee Details Updated");


        DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table.getModel();
        Doctor selectedDoctors =(Doctor) model.getValueAt(selectedRowIndex, 0);

        selectedDoctors.setDoc_name(username);
        selectedDoctors.setCity(city);
        selectedDoctors.setDoc_id(Doc_ID);
        selectedDoctors.setCommunity(comm);
        selectedDoctors.setSpeciality(spec);
     

        
        
        
        
        

        populateDocdirectory();
    }//GEN-LAST:event_Doc_save_btnActionPerformed

    private void Self_details_pat_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Self_details_pat_btnActionPerformed
        // TODO add your handling code here:
        populatePatdirectory();
        Self_Details_Pat.setVisible(true);
        SplitPane.setRightComponent(Self_Details_Pat);
        Doctor_Directory_Panel.setVisible(false);
//        SplitPane.setRightComponent(Doctor_Directory_Panel);
        CityCommHouse.setVisible(false);
        Option_Panel_Doc.setVisible(false);
        Hospital_CRUD.setVisible(false);
        Encounter_Panel.setVisible(false);
        
        
    }//GEN-LAST:event_Self_details_pat_btnActionPerformed

    private void Hosp_Search_pat_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hosp_Search_pat_btnActionPerformed
        // TODO add your handling code here:
        populateDoc2directory();
        populateHosp2directory();
        PatView_Hosp_Panel.setVisible(true);
        
        SplitPane.setRightComponent(PatView_Hosp_Panel);
        Self_Details_Pat.setVisible(false);
        CreatePerson.setVisible(false);
        Doctor_Directory_Panel.setVisible(false);
//        SplitPane.setRightComponent(Doctor_Directory_Panel);
        CityCommHouse.setVisible(false);
        Option_Panel_Doc.setVisible(false);
        Hospital_CRUD.setVisible(false);
        Encounter_Panel.setVisible(false);
    }//GEN-LAST:event_Hosp_Search_pat_btnActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String query = txtSearch.getText();
        filter(query);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void pat_directory_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pat_directory_btnActionPerformed
        // TODO add your handling code here:
                Option_Panel_Patient.setVisible(true);
                SplitPane.setRightComponent(Option_Panel_Patient);
                Option_Panel_Doc.setVisible(false);
                Hospital_CRUD.setVisible(false);
                Encounter_Panel.setVisible(false);
                CreatePerson.setVisible(false);
                Doctor_Directory_Panel.setVisible(false);
               
        
    }//GEN-LAST:event_pat_directory_btnActionPerformed

    private void btnback_button_cchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnback_button_cchActionPerformed
        // TODO add your handling code here:
        
      
                    Option_Panel_Admin.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin);
                    Option_Panel_Doc.setVisible(false);
                    Encounter_Panel.setVisible(false);
                     btnAddCityCommunity.setVisible(true);
    }//GEN-LAST:event_btnback_button_cchActionPerformed

    private void btnback_button_hospitalcrudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnback_button_hospitalcrudActionPerformed
        // TODO add your handling code here:
                    btnAddCityCommunity.setVisible(false);
                    Option_Panel_Admin.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin);
                    Option_Panel_Doc.setVisible(false); 
                    Encounter_Panel.setVisible(false);
    }//GEN-LAST:event_btnback_button_hospitalcrudActionPerformed

    private void CityCBox_HospActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityCBox_HospActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CityCBox_HospActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        populatePatdirectoryDoc();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnbackencounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackencounterActionPerformed
        // TODO add your handling code here:
//        btnAddCityCommunity.setVisible(false);
                    Option_Panel_Admin.setVisible(true);
                    SplitPane.setRightComponent(Option_Panel_Admin);
                    Option_Panel_Doc.setVisible(false);
                    
                    Encounter_Panel.setVisible(false);
        
    }//GEN-LAST:event_btnbackencounterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    private void populatePatdirectory() {
        DefaultTableModel model = (DefaultTableModel) tblPat_self.getModel();
        model.setRowCount(0);
        
        for ( VitalSigns ed : EncList.getHistory()){
            if(ed.getPat_id()==glb_pat_id){
            
            
            Object[] row = new Object[4];
            
            row[0]= ed;
            row[1]= ed.getPatient_name();
            row[2]= ed.getDoc_id();
            row[3]= ed.getDoc_name();
            
            model.addRow(row);}
            
            
        }}
    
      private void populatePatdirectoryDoc() {
        DefaultTableModel model = (DefaultTableModel) tblpatienthistory_dp.getModel();
        model.setRowCount(0);
        
        for ( Patient_Details pd : pat_history.getHistory()){
            
            
            
            Object[] row = new Object[4];
            
            row[0]= pd;
            row[1]= pd.getPatient_name();
            row[2]= pd.getCity();
            row[3]= pd.getAge();
            
            model.addRow(row);}
            
            
        }
    private void populatEncounterdirectory() {
        DefaultTableModel model = (DefaultTableModel) tblEnc.getModel();
        model.setRowCount(0);
        
        for ( VitalSigns ed : EncList.getHistory()){
            
            
            Object[] row = new Object[5];
            
            row[0]= ed;
            row[1]= ed.getPatient_name();
            row[4]= ed.getStart_date();
            row[3]= ed.getDoc_name();
            row[2]= ed.getDoc_id();
            
            
            model.addRow(row);
            
        }}
    private void populatePersondirectory() {
        DefaultTableModel model = (DefaultTableModel) PersonTbl.getModel();
        model.setRowCount(0);
        
        for ( Person ed : personList.getHistory()){
            
            
            Object[] row = new Object[4];
            
            row[0]= ed;
            row[2]= ed.getUserName();
            row[1]= ed.getRole();
            row[3]= ed.getCity();
            
            model.addRow(row);
            
        }}
    
    private void populateHospdirectory() {
        DefaultTableModel model = (DefaultTableModel) HospTbl.getModel();
        model.setRowCount(0);
        
        for ( Hospital ed : HospitalList.getHistory()){
            
            
            Object[] row = new Object[4];
            
            row[0]= ed;
            row[1]= ed.getCity();
            row[2]= ed.getComm();
//            row[3]= ed.getHeartRate();
            
            model.addRow(row);
            
        }}
    private void populateHosp2directory() {
        DefaultTableModel model = (DefaultTableModel) HospTbl1.getModel();
        model.setRowCount(0);
        
        for ( Hospital ed : HospitalList.getHistory()){
            
            
            Object[] row = new Object[4];
            
            row[0]= ed;
            row[1]= ed.getCity();
            row[2]= ed.getComm();
//            row[3]= ed.getHeartRate();
            
            model.addRow(row);
            
        }}
    private void populateDocdirectory() {
        DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table.getModel();
        model.setRowCount(0);
        
        for ( Doctor ed : DoctorList.getHistory()){
            
            
            Object[] row = new Object[5];
            
            row[0]= ed;
            row[1]= ed.getDoc_name();
            row[2]= ed.getAge();
            row[3]= ed.getCity();
            row[4]= ed.getCommunity();
//            row[3]= ed.getHeartRate();
            
            model.addRow(row);
            
        }}
    private void populateDoc2directory() {
        DefaultTableModel model = (DefaultTableModel) Doc_Dir_Table1.getModel();
        model.setRowCount(0);
        
        for ( Doctor ed : DoctorList.getHistory()){
            
            
            Object[] row = new Object[5];
            
            row[0]= ed;
            row[1]= ed.getDoc_name();
            row[2]= ed.getAge();
            row[3]= ed.getCity();
            row[4]= ed.getCommunity();
//            row[3]= ed.getHeartRate();
            
            model.addRow(row);
            
        }}
    private void filter(String query){
        
        DefaultTableModel dm;
        dm= (DefaultTableModel) HospTbl1.getModel();
        TableRowSorter<DefaultTableModel> tr= new TableRowSorter<DefaultTableModel>(dm);
        HospTbl1.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(query));
        
        
        DefaultTableModel dm2;
        dm2= (DefaultTableModel) Doc_Dir_Table1.getModel();
        TableRowSorter<DefaultTableModel> tr2= new TableRowSorter<DefaultTableModel>(dm2);
        Doc_Dir_Table1.setRowSorter(tr2);
        
        tr2.setRowFilter(RowFilter.regexFilter(query));
      
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.TextField BP_tf;
    private javax.swing.JButton Back_Btn;
    private javax.swing.JButton Back_Btn1;
    private javax.swing.JButton BtnLogin;
    private javax.swing.JButton BtnSave;
    private javax.swing.JComboBox<String> CityCBox_Hosp;
    private javax.swing.JComboBox<String> CityComboBox;
    private javax.swing.JPanel CityCommHouse;
    private javax.swing.JTextField City_tf;
    private javax.swing.JComboBox<String> CommCbox_Hosp;
    private javax.swing.JButton Comm_Save_Btn;
    private javax.swing.JComboBox<String> CommunityComboBox2;
    private javax.swing.JTextField Community_tf;
    private javax.swing.JPanel ControlPanel;
    private javax.swing.JPanel CreatePerson;
    private javax.swing.JButton Del_Hosp_btn;
    private javax.swing.JButton Doc_Delete_btn;
    private javax.swing.JTable Doc_Dir_Table;
    private javax.swing.JTable Doc_Dir_Table1;
    private javax.swing.JTable Doc_Dir_Table2;
    private javax.swing.JTextField Doc_Id_txt;
    private javax.swing.JButton Doc_View_btn;
    private javax.swing.JButton Doc_save_btn;
    private javax.swing.JButton Doc_update_btn;
    private javax.swing.JPanel Doctor_Directory_Panel;
    private javax.swing.JPanel Encounter_Panel;
    private javax.swing.JButton Encounter_option_btn;
    private javax.swing.JComboBox<String> GenderComboBox;
    private javax.swing.JTextField HospNametf;
    private javax.swing.JTable HospTbl;
    private javax.swing.JTable HospTbl1;
    private javax.swing.JButton Hosp_Search_pat_btn;
    private javax.swing.JButton Hosp_op_btn;
    private javax.swing.JPanel Hospital_CRUD;
    private javax.swing.JComboBox<String> HouseComboBox;
    private javax.swing.JTextField House_tf;
    private javax.swing.JButton Login;
    private javax.swing.JPanel Login2Panel;
    private javax.swing.JPanel Option_Panel_Admin;
    private javax.swing.JPanel Option_Panel_Doc;
    private javax.swing.JPanel Option_Panel_Patient;
    private javax.swing.JPanel PatView_Hosp_Panel;
    private java.awt.TextField Patient_Age_tf;
    private java.awt.TextField Patient_Name_tf;
    private javax.swing.JButton Per_Delete;
    private javax.swing.JPanel Per_RUD_Panel;
    private javax.swing.JButton Per_Save_Btn;
    private javax.swing.JButton Per_Update;
    private javax.swing.JButton Per_Update_Save_Btn;
    private javax.swing.JButton Per_View;
    private javax.swing.JTable PersonTbl;
    private javax.swing.JComboBox<String> RoleComboBox;
    private javax.swing.JButton SaveHospbtn;
    private javax.swing.JButton SaveUpdHospbtn1;
    private javax.swing.JButton Save_Enc_btn;
    private javax.swing.JPanel Self_Details_Pat;
    private javax.swing.JButton Self_details_pat_btn;
    private javax.swing.JSplitPane SplitPane;
    private com.toedter.calendar.JDateChooser StartDate;
    private java.awt.TextField Temp_tf;
    private javax.swing.JButton Update_hosp_btn;
    private javax.swing.JPanel Workarea;
    private javax.swing.JTextField age_tf;
    private javax.swing.JButton btnAddCityCommunity;
    private javax.swing.JButton btnAddUser1;
    private javax.swing.JButton btnEncHist;
    private javax.swing.JButton btnEncounter;
    private javax.swing.JButton btnPatDir;
    private javax.swing.JButton btnUpdateUser;
    private javax.swing.JButton btnback_button_cch;
    private javax.swing.JButton btnback_button_hospitalcrud;
    private javax.swing.JButton btnbackencounter;
    private javax.swing.JLabel city_lbl;
    private java.awt.TextField city_tf;
    private javax.swing.JTextField city_txt;
    private javax.swing.JLabel comm_lbl;
    private java.awt.TextField comm_tf;
    private javax.swing.JTextField comm_txt;
    private javax.swing.JButton doc_directory_btn;
    private javax.swing.JLabel doc_id_lbl;
    private java.awt.TextField doc_id_tf;
    private java.awt.TextField doc_name_tf1;
    private java.awt.TextField emailid_tf;
    private java.awt.TextField emailid_tf1;
    private java.awt.TextField gender_tf;
    private java.awt.TextField heartRate;
    private java.awt.TextField house_tf;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private java.awt.Label label1;
    private javax.swing.JPasswordField passwordTxtFld;
    private javax.swing.JButton pat_directory_btn;
    private java.awt.TextField pat_id_tf;
    private javax.swing.JPasswordField perPass_tf;
    private javax.swing.JPasswordField perPass_tf1;
    private java.awt.TextField per_id_tf;
    private java.awt.TextField per_id_tf1;
    private java.awt.TextField per_username_tf;
    private java.awt.TextField per_username_tf1;
    private javax.swing.JComboBox<String> roleBox;
    private java.awt.TextField role_tf;
    private javax.swing.JLabel spec_lbl;
    private javax.swing.JTextField spec_txt;
    private javax.swing.JTextField speciality;
    private javax.swing.JTable tblEnc;
    private javax.swing.JTable tblPat_self;
    private javax.swing.JTable tblpatienthistory_dp;
    private javax.swing.JTable tblpatienthistory_dp1;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField userNameTxtFld;
    private javax.swing.JLabel user_lbl;
    private javax.swing.JTextField usr_txt;
    // End of variables declaration//GEN-END:variables
}
